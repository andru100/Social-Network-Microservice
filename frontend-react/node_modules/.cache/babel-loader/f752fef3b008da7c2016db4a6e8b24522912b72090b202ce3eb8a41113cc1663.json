{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst react_1 = __importDefault(require(\"react\"));\nconst Dialog_1 = __importDefault(require(\"@material-ui/core/Dialog\"));\nconst DialogActions_1 = __importDefault(require(\"@material-ui/core/DialogActions\"));\nconst DialogContent_1 = __importDefault(require(\"@material-ui/core/DialogContent\"));\nconst DialogContentText_1 = __importDefault(require(\"@material-ui/core/DialogContentText\"));\nconst DialogTitle_1 = __importDefault(require(\"@material-ui/core/DialogTitle\"));\nconst Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nconst AlertDialog = _ref => {\n  let {\n    close,\n    message,\n    options\n  } = _ref;\n  return react_1.default.createElement(Dialog_1.default, {\n    open: true,\n    onClose: close,\n    keepMounted: true,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\"\n  }, react_1.default.createElement(DialogTitle_1.default, {\n    id: \"alert-dialog-slide-title\"\n  }, options.title), react_1.default.createElement(DialogContent_1.default, null, react_1.default.createElement(DialogContentText_1.default, {\n    id: \"alert-dialog-slide-description\"\n  }, message)), react_1.default.createElement(DialogActions_1.default, null, options.actions && options.actions.map((action, index) => react_1.default.createElement(Button_1.default, {\n    onClick: () => {\n      action.onClick();\n      close();\n    },\n    color: \"primary\",\n    key: index\n  }, action.copy)), react_1.default.createElement(Button_1.default, {\n    onClick: close,\n    color: \"primary\"\n  }, options.closeCopy || \"Okay\")));\n};\nexports.default = AlertDialog;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA,MAAMA,WAAW,GAAG,QAAwC;EAAA,IAAvC;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAO,CAAU;EACtD,OACEC,8BAACC,gBAAM;IACLC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAEN,KAAK;IACdO,WAAW;IAAA,mBACK,0BAA0B;IAAA,oBACzB;EAAgC,GAEjDJ,8BAACK,qBAAW;IAACC,EAAE,EAAC;EAA0B,GAAEP,OAAO,CAACQ,KAAK,CAAe,EACxEP,8BAACQ,uBAAa,QACZR,8BAACS,2BAAiB;IAACH,EAAE,EAAC;EAAgC,GACnDR,OAAO,CACU,CACN,EAChBE,8BAACU,uBAAa,QACXX,OAAO,CAACY,OAAO,IACdZ,OAAO,CAACY,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAChCd,8BAACe,gBAAM;IACLC,OAAO,EAAE,MAAK;MACZH,MAAM,CAACG,OAAO,EAAE;MAChBnB,KAAK,EAAE;IACT,CAAC;IACDoB,KAAK,EAAC,SAAS;IACfC,GAAG,EAAEJ;EAAK,GAETD,MAAM,CAACM,IAAI,CAEf,CAAC,EACJnB,8BAACe,gBAAM;IAACC,OAAO,EAAEnB,KAAK;IAAEoB,KAAK,EAAC;EAAS,GACpClB,OAAO,CAACqB,SAAS,IAAI,MAAM,CACrB,CACK,CACT;AAEb,CAAC;AAEDC,kBAAezB,WAAW","names":["AlertDialog","close","message","options","react_1","Dialog_1","open","onClose","keepMounted","DialogTitle_1","id","title","DialogContent_1","DialogContentText_1","DialogActions_1","actions","map","action","index","Button_1","onClick","color","key","copy","closeCopy","exports"],"sources":["C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\node_modules\\react-alert-template-mui\\index.tsx"],"sourcesContent":["import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\ninterface IProps {\n  message: string | JSX.Element;\n  options: {\n    title?: string | JSX.Element;\n    actions?: {\n      copy: string;\n      onClick: any;\n    }[];\n    closeCopy?: string;\n  };\n  close: any;\n}\nconst AlertDialog = ({ close, message, options }: IProps) => {\n  return (\n    <Dialog\n      open={true}\n      onClose={close}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">{options.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {options.actions &&\n          options.actions.map((action, index) => (\n            <Button\n              onClick={() => {\n                action.onClick();\n                close();\n              }}\n              color=\"primary\"\n              key={index}\n            >\n              {action.copy}\n            </Button>\n          ))}\n        <Button onClick={close} color=\"primary\">\n          {options.closeCopy || \"Okay\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertDialog;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}