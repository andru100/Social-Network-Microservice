{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useEffect, Link } from 'react-router-dom';\nimport SendData from './SendData';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RenderSignUp() {\n  _s();\n  const Navigate = useNavigate();\n  const [stage, setStage] = React.useState(\"stage1\");\n  async function signup() {\n    // sends username, password, email from input, backend then creates s3 bucket and stores details on mongodb\n\n    const username = document.getElementById('signupusername').value;\n    const password = document.getElementById('signuppass').value;\n    const email = document.getElementById('signupemail').value;\n    const mobile = document.getElementById('signupmobile').value;\n    let signupdata = {\n      data: {\n        Username: username,\n        Password: password,\n        Email: email,\n        Mobile: mobile,\n        RequestType: \"stage1\"\n      }\n    };\n    let gqlRequest = \"mutation SignUp ($data: SecurityCheckInput!){ SignUp(input: $data) { Token } }\";\n    let response = await SendData(gqlRequest, signupdata, 'signup');\n    if (response.data.SignUp.Token == \"proceed\") {\n      // if password is a match redirect to profile page\n      alert(\"Please enter OTP sent to your mobile\");\n      setStage(\"stage2\");\n    }\n\n    // if ( response ){ // if password is a match redirect to profile page\n    // \tlocalStorage.setItem('jwt_token', response.data.SignUp.Token) // Store JWT in storage\n    //   alert(\"Welcome to the club! Please setup your profile\")\n    // \tNavigate (\"/editProfile/\"+username)\n    // } \n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: stage === \"stage1\"\n  }, void 0, false);\n}\n_s(RenderSignUp, \"mb8aQj8IO+1/XgUPGF+Ff60Ld5Y=\", false, function () {\n  return [useNavigate];\n});\n_c = RenderSignUp;\nvar _c;\n$RefreshReg$(_c, \"RenderSignUp\");","map":{"version":3,"names":["React","useNavigate","useEffect","Link","SendData","RenderSignUp","Navigate","stage","setStage","useState","signup","username","document","getElementById","value","password","email","mobile","signupdata","data","Username","Password","Email","Mobile","RequestType","gqlRequest","response","SignUp","Token","alert"],"sources":["C:/Users/devteam/source/repos/andru100/Social-Network-Microservice/frontend-react/src/routes/SignUp.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useEffect, Link } from 'react-router-dom';\r\nimport SendData from './SendData';\r\n\r\n\r\nexport default function RenderSignUp () {\r\n\r\n  const Navigate = useNavigate();\r\n  const [stage, setStage] = React.useState(\"stage1\");\r\n\r\n  async function signup () { // sends username, password, email from input, backend then creates s3 bucket and stores details on mongodb\r\n  \r\n    const username = document.getElementById('signupusername').value;\r\n    const password = document.getElementById('signuppass').value;\r\n    const email = document.getElementById('signupemail').value;\r\n    const mobile = document.getElementById('signupmobile').value;\r\n      \r\n    let signupdata = \r\n      { data: {\r\n        Username: username,\r\n        Password: password,\r\n        Email: email,\r\n        Mobile: mobile,\r\n        RequestType: \"stage1\"\r\n        }\r\n      }\r\n\r\n\t\tlet gqlRequest = \"mutation SignUp ($data: SecurityCheckInput!){ SignUp(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signupdata, 'signup')\r\n\t\t\r\n\t\tif ( response.data.SignUp.Token == \"proceed\" ){ // if password is a match redirect to profile page\r\n      alert(\"Please enter OTP sent to your mobile\")\r\n      setStage(\"stage2\")\r\n\t\t} \r\n\r\n    // if ( response ){ // if password is a match redirect to profile page\r\n\t\t// \tlocalStorage.setItem('jwt_token', response.data.SignUp.Token) // Store JWT in storage\r\n    //   alert(\"Welcome to the club! Please setup your profile\")\r\n\t\t// \tNavigate (\"/editProfile/\"+username)\r\n\t\t// } \r\n  }\r\n\r\n  return (\r\n    <>\r\n    {stage === \"stage1\"  }\r\n    </> \r\n  );\r\n\r\n  \r\n\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAGlC,eAAe,SAASC,YAAY,GAAI;EAAA;EAEtC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,QAAQ,CAAC;EAElD,eAAeC,MAAM,GAAI;IAAE;;IAEzB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,KAAK;IAChE,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;IAC5D,MAAME,KAAK,GAAGJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IAC1D,MAAMG,MAAM,GAAGL,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,KAAK;IAE5D,IAAII,UAAU,GACZ;MAAEC,IAAI,EAAE;QACNC,QAAQ,EAAET,QAAQ;QAClBU,QAAQ,EAAEN,QAAQ;QAClBO,KAAK,EAAEN,KAAK;QACZO,MAAM,EAAEN,MAAM;QACdO,WAAW,EAAE;MACb;IACF,CAAC;IAEL,IAAIC,UAAU,GAAG,gFAAgF;IAEjG,IAAIC,QAAQ,GAAG,MAAMtB,QAAQ,CAACqB,UAAU,EAAEP,UAAU,EAAE,QAAQ,CAAC;IAE/D,IAAKQ,QAAQ,CAACP,IAAI,CAACQ,MAAM,CAACC,KAAK,IAAI,SAAS,EAAE;MAAE;MAC5CC,KAAK,CAAC,sCAAsC,CAAC;MAC7CrB,QAAQ,CAAC,QAAQ,CAAC;IACtB;;IAEE;IACF;IACE;IACF;IACA;EACA;;EAEA,oBACE;IAAA,UACCD,KAAK,KAAK;EAAQ,iBAChB;AAKP;AAAC,GA9CuBF,YAAY;EAAA,QAEjBJ,WAAW;AAAA;AAAA,KAFNI,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}