{"ast":null,"code":"export default async function RequestOTP(username, requesttype) {\n  console.log(\"Requesting OTP\", requesttype);\n  let signindata = {\n    data: {\n      Username: username,\n      RequestType: requesttype,\n      UpdateType: \"user\"\n    }\n  };\n  let gqlRequest = \"mutation SecureUpdate ($data: SecurityCheckInput!){ SecureUpdate(input: $data) { Token } }\";\n  let response = await SendData(gqlRequest, signindata, 'secureupdate');\n  if (\"errors\" in response) {\n    // if password is a match redirect to profile page\n    console.log(\"Unable to send OTP\", response.errors[0].message);\n    return null, response.errors[0].message;\n  } else {\n    // if password is a match redirect to profile page\n    return response.data.SecureUpdate.Token, null;\n  }\n}\n_c = RequestOTP;\nvar _c;\n$RefreshReg$(_c, \"RequestOTP\");","map":{"version":3,"names":["RequestOTP","username","requesttype","console","log","signindata","data","Username","RequestType","UpdateType","gqlRequest","response","SendData","errors","message","SecureUpdate","Token"],"sources":["/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/RequestOTP.jsx"],"sourcesContent":["\n\nexport default async function RequestOTP (username, requesttype) {\n\n    console.log(\"Requesting OTP\", requesttype)\n        \n    let signindata = {data: {\n        Username: username,\n        RequestType: requesttype,\n        UpdateType: \"user\"\n        }\n    }\n\n    let gqlRequest = \"mutation SecureUpdate ($data: SecurityCheckInput!){ SecureUpdate(input: $data) { Token } }\"\n    \n    let response = await SendData(gqlRequest, signindata, 'secureupdate')\n\n    \n    if ( \"errors\" in response ){ // if password is a match redirect to profile page\n        console.log(\"Unable to send OTP\", response.errors[0].message )\n        return null, response.errors[0].message\n        \n    } else { // if password is a match redirect to profile page\n        return response.data.SecureUpdate.Token, null\n        \n    } \n\n}"],"mappings":"AAEA,eAAe,eAAeA,UAAU,CAAEC,QAAQ,EAAEC,WAAW,EAAE;EAE7DC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,WAAW,CAAC;EAE1C,IAAIG,UAAU,GAAG;IAACC,IAAI,EAAE;MACpBC,QAAQ,EAAEN,QAAQ;MAClBO,WAAW,EAAEN,WAAW;MACxBO,UAAU,EAAE;IACZ;EACJ,CAAC;EAED,IAAIC,UAAU,GAAG,4FAA4F;EAE7G,IAAIC,QAAQ,GAAG,MAAMC,QAAQ,CAACF,UAAU,EAAEL,UAAU,EAAE,cAAc,CAAC;EAGrE,IAAK,QAAQ,IAAIM,QAAQ,EAAE;IAAE;IACzBR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEO,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAE;IAC9D,OAAO,IAAI,EAAEH,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO;EAE3C,CAAC,MAAM;IAAE;IACL,OAAOH,QAAQ,CAACL,IAAI,CAACS,YAAY,CAACC,KAAK,EAAE,IAAI;EAEjD;AAEJ;AAAC,KAzB6BhB,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}