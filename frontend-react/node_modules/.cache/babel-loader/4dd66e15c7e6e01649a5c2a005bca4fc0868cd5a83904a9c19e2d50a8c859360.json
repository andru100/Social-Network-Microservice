{"ast":null,"code":"import SendData from './SendData';\nexport default async function Chkauth() {\n  //check if user has valid jwt\n\n  let jwt = localStorage.getItem('jwt_token');\n  let jwtObject = {\n    data: {\n      Token: jwt\n    }\n  };\n  let gqlRequest = \"query Chkauth ($data: JwtdataInput!){ Chkauth(input: $data) { AuthdUser } }\";\n  let response = await SendData(gqlRequest, jwtObject);\n  if (\"errors\" in response) {\n    // if password is a match redirect to profile page\n    {\n      ProcessErrorAlerts(\"hi\", \"hi\");\n    }\n    console.log(\"user is not signed in\", response.errors[0].message);\n  } else {\n    // if password is a match redirect to profile page\n    console.log(\"authenticated username is:\", response.data.Chkauth.AuthdUser);\n    return response.data.Chkauth.AuthdUser;\n  }\n}\n_c = Chkauth;\nvar _c;\n$RefreshReg$(_c, \"Chkauth\");","map":{"version":3,"names":["SendData","Chkauth","jwt","localStorage","getItem","jwtObject","data","Token","gqlRequest","response","ProcessErrorAlerts","console","log","errors","message","AuthdUser"],"sources":["C:/Users/devteam/source/repos/andru100/Social-Network-Microservice/frontend-react/src/routes/chkAuth.jsx"],"sourcesContent":["import SendData from './SendData';\r\n\r\nexport default async function Chkauth (){ //check if user has valid jwt\r\n    \r\n  let jwt = localStorage.getItem('jwt_token');\r\n\r\n  let jwtObject = {\r\n    data: {\r\n      Token: jwt\r\n    }  \r\n  }\r\n\r\n  let gqlRequest = \"query Chkauth ($data: JwtdataInput!){ Chkauth(input: $data) { AuthdUser } }\"\r\n  \r\n  let response = await SendData(gqlRequest, jwtObject)\r\n\r\n  if ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n    {ProcessErrorAlerts(\"hi\", \"hi\")}\r\n    console.log(\"user is not signed in\", response.errors[0].message )\r\n    \r\n  } else { // if password is a match redirect to profile page\r\n    console.log(\"authenticated username is:\", response.data.Chkauth.AuthdUser)\r\n\r\n    return response.data.Chkauth.AuthdUser\r\n  } \r\n\r\n\r\n  \r\n} "],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,eAAe,eAAeC,OAAO,GAAG;EAAE;;EAExC,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE3C,IAAIC,SAAS,GAAG;IACdC,IAAI,EAAE;MACJC,KAAK,EAAEL;IACT;EACF,CAAC;EAED,IAAIM,UAAU,GAAG,6EAA6E;EAE9F,IAAIC,QAAQ,GAAG,MAAMT,QAAQ,CAACQ,UAAU,EAAEH,SAAS,CAAC;EAEpD,IAAK,QAAQ,IAAII,QAAQ,EAAE;IAAE;IAC3B;MAACC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;IAAA;IAC/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAE;EAEnE,CAAC,MAAM;IAAE;IACPH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAACH,IAAI,CAACL,OAAO,CAACc,SAAS,CAAC;IAE1E,OAAON,QAAQ,CAACH,IAAI,CAACL,OAAO,CAACc,SAAS;EACxC;AAIF;AAAC,KA1B6Bd,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}