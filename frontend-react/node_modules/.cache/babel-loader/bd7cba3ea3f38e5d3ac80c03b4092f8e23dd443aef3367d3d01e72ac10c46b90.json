{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider(_ref) {\n  let {\n    prefixes = {},\n    dir,\n    children\n  } = _ref;\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n    let {\n      ...props\n    } = _ref2;\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","map":{"version":3,"names":["React","useContext","useMemo","jsx","_jsx","ThemeContext","createContext","prefixes","Consumer","Provider","ThemeProvider","dir","children","contextValue","value","useBootstrapPrefix","prefix","defaultPrefix","useIsRTL","createBootstrapComponent","Component","opts","isClassy","prototype","isReactComponent","forwardRefAs","Wrapped","forwardRef","ref","props","bsPrefix","displayName","name","ThemeConsumer"],"sources":["/home/dev/go/Social-Network-Microservice/frontend-react/node_modules/react-bootstrap/esm/ThemeProvider.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,YAAY,GAAG,aAAaL,KAAK,CAACM,aAAa,CAAC;EACpDC,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AACF,MAAM;EACJC,QAAQ;EACRC;AACF,CAAC,GAAGJ,YAAY;AAEhB,SAASK,aAAa,OAInB;EAAA,IAJoB;IACrBH,QAAQ,GAAG,CAAC,CAAC;IACbI,GAAG;IACHC;EACF,CAAC;EACC,MAAMC,YAAY,GAAGX,OAAO,CAAC,OAAO;IAClCK,QAAQ,EAAE;MAAE,GAAGA;IACf,CAAC;IACDI;EACF,CAAC,CAAC,EAAE,CAACJ,QAAQ,EAAEI,GAAG,CAAC,CAAC;EACpB,OAAO,aAAaP,IAAI,CAACK,QAAQ,EAAE;IACjCK,KAAK,EAAED,YAAY;IACnBD,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,kBAAkB,CAACC,MAAM,EAAEC,aAAa,EAAE;EACxD,MAAM;IACJV;EACF,CAAC,GAAGN,UAAU,CAACI,YAAY,CAAC;EAC5B,OAAOW,MAAM,IAAIT,QAAQ,CAACU,aAAa,CAAC,IAAIA,aAAa;AAC3D;AACA,OAAO,SAASC,QAAQ,GAAG;EACzB,MAAM;IACJP;EACF,CAAC,GAAGV,UAAU,CAACI,YAAY,CAAC;EAC5B,OAAOM,GAAG,KAAK,KAAK;AACtB;AAEA,SAASQ,wBAAwB,CAACC,SAAS,EAAEC,IAAI,EAAE;EACjD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAEA,IAAI,GAAG;IACnCL,MAAM,EAAEK;EACV,CAAC;EACD,MAAMC,QAAQ,GAAGF,SAAS,CAACG,SAAS,IAAIH,SAAS,CAACG,SAAS,CAACC,gBAAgB,CAAC,CAAC;;EAE9E,MAAM;IACJR,MAAM;IACNS,YAAY,GAAGH,QAAQ,GAAG,KAAK,GAAG;EACpC,CAAC,GAAGD,IAAI;EACR,MAAMK,OAAO,GAAG,aAAa1B,KAAK,CAAC2B,UAAU,CAAC,QAC3CC,GAAG,KAAK;IAAA,IADoC;MAAE,GAAGC;IACpD,CAAC;IACCA,KAAK,CAACJ,YAAY,CAAC,GAAGG,GAAG;IACzB,MAAME,QAAQ,GAAGf,kBAAkB,CAACc,KAAK,CAACC,QAAQ,EAAEd,MAAM,CAAC;IAC3D,OAAO,aAAaZ,IAAI,CAACgB,SAAS,EAAE;MAAE,GAAGS,KAAK;MAC5CC,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFJ,OAAO,CAACK,WAAW,GAAI,aAAYX,SAAS,CAACW,WAAW,IAAIX,SAAS,CAACY,IAAK,GAAE;EAC7E,OAAON,OAAO;AAChB;AAEA,SAASP,wBAAwB,EAAEX,QAAQ,IAAIyB,aAAa;AAC5D,eAAevB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}