[{"/home/dev/go/Social-Network-Microservice/frontend-react/src/index.js":"1","/home/dev/go/Social-Network-Microservice/frontend-react/src/App.js":"2","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SignUp.jsx":"3","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SignIn.jsx":"4","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/UpdateDetails.jsx":"5","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SendData.jsx":"6","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/chkAuth.jsx":"7","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/UpdateHybrid.jsx":"8","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SigninHybrid.jsx":"9","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/Home.jsx":"10","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/RequestOTP.jsx":"11","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/EditProfile.jsx":"12","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/Logout.jsx":"13"},{"size":651,"mtime":1680820585718,"results":"14","hashOfConfig":"15"},{"size":367,"mtime":1681302626666,"results":"16","hashOfConfig":"15"},{"size":10495,"mtime":1681480943286,"results":"17","hashOfConfig":"15"},{"size":5594,"mtime":1681385040396,"results":"18","hashOfConfig":"15"},{"size":4195,"mtime":1681252940591,"results":"19","hashOfConfig":"15"},{"size":652,"mtime":1680518717744,"results":"20","hashOfConfig":"15"},{"size":789,"mtime":1679782752164,"results":"21","hashOfConfig":"15"},{"size":8891,"mtime":1681252873173,"results":"22","hashOfConfig":"15"},{"size":6047,"mtime":1681384222778,"results":"23","hashOfConfig":"15"},{"size":26456,"mtime":1681759957726,"results":"24","hashOfConfig":"15"},{"size":652,"mtime":1680526643606,"results":"25","hashOfConfig":"15"},{"size":8280,"mtime":1680354146454,"results":"26","hashOfConfig":"15"},{"size":283,"mtime":1680311135433,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"rzenf7",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/go/Social-Network-Microservice/frontend-react/src/index.js",[],[],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/App.js",["72"],[],"import React from 'react';\nimport './css/main.css';\nimport './css/util.css';\nimport './css/homePage.css';\nimport './css/displayPics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ThemeProvider from 'react-bootstrap/ThemeProvider'\nimport SignIn from './routes/SignIn';\n\nfunction App() {\n\n  return (\n  <div>\n    <SignIn/>\n  </div>\n  );\n}\n\nexport default App","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SignUp.jsx",["73","74","75","76","77","78"],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SignIn.jsx",[],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/UpdateDetails.jsx",["79","80","81","82","83","84","85","86","87"],[],"import React from 'react';\nimport { useEffect } from \"react\";\nimport RequestOTP from './RequestOTP';\nimport UpdateHybrid from './UpdateHybrid';\nimport Home from './Home';\nimport { useAlert } from \"react-alert\";\n\nexport default function RenderUpdateDetails (props) {\n\n\tconst [authtype, setAuthType] = React.useState(\"init\");\n\tconst [username, setUsername] = React.useState(props.username)\n\tconst [address, setAddress] = React.useState(\"unassigned\")\n\tconst [userDetails, setUserDetails] = React.useState({username: \"\", password: \"\", email: \"\", mobile: \"\"})\n\tconst [name, setName] = React.useState(\"John Doe\");\n\tconst [email, setEmail] = React.useState(\"johndoe@gmail.com\");\n\tconst [phone, setPhone] = React.useState(\"555-555-5555\");\n\tconst [page, setPage] = React.useState(\"default\");\n\t\n  \n\n\n\tconsole.log(\"update details render start, username:\", username, \"page:\", page)\n\n\t// async function GetOTP (requestType, pagetype) {\n\t// \tif (requestType == \"none\") {\n\t// \t\tsetAuthType(requestType)\n\t// \t\tsetPage(pagetype)\n\t// \t\treturn\n\t// \t}\n\n\t// \tRequestOTP(username, requestType, \"user\").then((response) => {\n\t// \t\tif (( \"errors\" in response )) {\n\t// \t\t\tconsole.log(\"error bak from otp request\", response.errors[0].message)\n\t// \t\t\talertError(response.errors[0].message)\n\t// \t\t} else {\n\t// \t\t\tsetAddress([response.data.SecureUpdate.MobClue, response.data.SecureUpdate.EmailClue])\n\t// \t\t\tsetAuthType(response.data.SecureUpdate.AuthType)\n\t// \t\t\tconsole.log(\"otp response setting page:\", pagetype)\n\t// \t\t\tsetPage(pagetype)\n\t\t\t\t\n\n\t// \t\t}\n\t// \t})\n\t// }\n\n\tfunction StartUpdate (updatetype) {\n\t\tsetPage(updatetype)\n\t}\n\n\tconst handleUpdateName = (event) => {\n\t\tsetName(event.target.value);\n\t};\n\t\n\tconst handleUpdateEmail = (event) => {\n\t\tsetEmail(event.target.value);\n\t};\n\t\n\tconst handleUpdatePhone = (event) => {\n\t\tsetPhone(event.target.value);\n\t};\n\t\n\tconst handleUpdateAddress = (event) => {\n\t\tsetAddress(event.target.value);\n\t};\n\n\tfunction alertError(error){\n\t\tconst delimiter = '= '\n\t\tconst start = 2\n\t\tconst tokens = error.split(delimiter).slice(start)\n\t\tconst result = tokens.join(delimiter); // those.that\n\t\talert.show(result)\n\t}\n\n\tfunction GoHome () {\n\t\tconsole.log(\"going home, username:\", username)\n\t\tsetPage(\"home\")\n\t}\n\n\tfunction LandingPage () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"limiter\">\n      \t\t\t\t<div className=\"container-login100\" >\n       \t\t\t\t\t<div className=\"wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33\">\n          \t\t\t\t\t<form className=\"login100-form validate-form flex-sb flex-w\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h1>Account Details</h1>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={name} onChange={handleUpdateName} />\n\t\t\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={() => StartUpdate(\"Username\")}>\n\t\t\t\t\t\t\t\t\t\t\tupdate username\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>Email:</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={email} onChange={handleUpdateEmail} />\n\t\t\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={() => StartUpdate(\"Email\")}>\n\t\t\t\t\t\t\t\t\t\t\tupdate email\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>Phone:</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={phone} onChange={handleUpdatePhone} />\n\t\t\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={() => StartUpdate(\"Mobile\")}>\n\t\t\t\t\t\t\t\t\t\t\tupdate mobile\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>Password:</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={address} onChange={handleUpdateAddress} />\n\t\t\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={() => StartUpdate(\"Password\")}>\n\t\t\t\t\t\t\t\t\t\t\tupdate password\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => GoHome()}>\n\t\t\t\t\t\t\t\t\t\t\tback to home\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\n  return ( \n\t<>\n\t\t\n\t\t{page === \"default\" ? <LandingPage /> : page === \"home\" ? <Home sessionuser={username} viewing= {username} page={\"home\"}/> : <UpdateHybrid username={username} /*  address ={address} */ updatetype = {page} rendertype={\"password\"}/* authtype ={authtype} *//>}\n\t\t\n\t</>\n\t)\n};\n\n\n","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SendData.jsx",[],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/chkAuth.jsx",[],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/UpdateHybrid.jsx",["88","89"],[],"import React from 'react';\nimport SendData from './SendData';\nimport { useAlert } from \"react-alert\";\nimport RequestOTP from './RequestOTP';\nimport UpdateDetails from './UpdateDetails';\nimport Home from './Home';\n\nexport default function UpdateHybrid (props) {\n\t\n\tconst [page, setPage] = React.useState(\"default\");\n\tconst [rendertype, setRenderType] = React.useState(props.rendertype); // an remove this and set to auto take session and get a proceed and address clue and use as a point on seurity.\n\tconst [authtype, setAuthType] = React.useState(\"init\");\n\tconst [address, setAddress] = React.useState(\"init\");\n\tconst [resetdata, setResetData] = React.useState({\n\t\tUsername: props.username,\n\t\tUpdateType: props.updatetype,\n\t\tRequestType: \"stage2\",\n\t});\n\tconst alert = useAlert()\n\n\t\n\n\tconsole.log(\"UpdateHybrid rendered: stage: always 2\", \"rendertype: \", rendertype, \"authtype: \", authtype, \"resetuserdata: \", resetdata)\n\n\t\t\n\t\n\n\tasync function updateHybrid(){\n\n\n\t\tlet updatedata = resetdata\n\n\t\t\n\t\t//console.log(\"authtype is: \", authtype)\n\n\n\t\tif (rendertype.includes(\"sms\")) {\n\t\t\tconst sms = document.getElementById('sms').value;\n\t\t\tupdatedata.OTP_Mobile = sms\n\t\t\t\n\t\t}\n\t\tif (rendertype.includes(\"email\")) {\n\t\t\tconst email = document.getElementById('email').value;\n\t\t\tupdatedata.OTP_Email = email\n\t\t\t\n\t\t}\n\n\t\tif (rendertype.includes(\"password\")) {\n\t\t\tconst password = document.getElementById('password').value;\n\t\t\tupdatedata.Password = password\n\t\t}\n\t\tif (rendertype.includes(\"update\")) {\n\t\t\tconst updatevalue = document.getElementById('resethybrid').value;\n\t\t\tupdatedata.UpdateData = updatevalue\n\t\t\tupdatedata.RequestType = \"update\"\n\t\t}\n\n\t\tlet gqlRequest = \"mutation SecureUpdate ($data: SecurityCheckInput!){ SecureUpdate (input: $data) { Token AuthType MobClue EmailClue} }\"\n\t\t\n\t\tlet response = await SendData(gqlRequest, {data: updatedata}, 'secureupdate')\n\n\t\t\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\n\t\t\tconsole.log(\"error updating\", response.errors[0].message )\n\t\t\talertError(response.errors[0].message)\n\t\t\treturn false\n\t\t\t\n\t\t} else {\n\t\t\tswitch (response.data.SecureUpdate.Token){\n\t\t\t\tcase \"proceed\":\n\t\t\t\t\tsetResetData(updatedata)\n\t\t\t\t\tsetAddress([response.data.SecureUpdate.MobClue, response.data.SecureUpdate.EmailClue])\n\t\t\t\t\tconsole.log(\"setting rendertype to next auth type from server\", response.data.SecureUpdate.AuthType)\n\t\t\t\t\tsetRenderType(response.data.SecureUpdate.AuthType)//update auth from server for next step/type of question dnd \n\t\t\t\t\tbreak;\n\t\t\t\tcase \"update\":\n\t\t\t\t\tsetResetData(updatedata)\n\t\t\t\t\tconsole.log(\"server requesting update data \")\n\t\t\t\t\tsetRenderType(\"update\")//update auth from server for next step/type of question dnd \n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\talert.show(resetdata.UpdateType + \" updated\")\n\t\t\t\t\tlocalStorage.setItem('jwt_token', response.data.SecureUpdate.Token) // Store JWT in storage\n\t\t\t\t\tif (updatedata.UpdateType === \"Username\") {\n\t\t\t\t\t\tupdatedata.Username = updatedata.UpdateData\n\t\t\t\t\t}\n\t\t\t\t\tsetResetData(updatedata)\n\t\t\t\t\tsetPage(\"home\")\n\t\t\t\t\tbreak;\n\t\t\t\n\t\t\t}\n\t\t\n\t\t} \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t} \n\t\t\n\t\t\n\t\n\n\tasync function ResendOTP (requestType) {\n\t\tRequestOTP(resetdata.Username, requestType).then((response) => {\n\t\t\tif (( \"errors\" in response )) {\n\t\t\t\tconsole.log(\"error bak from otp request\", response.errors[0].message)\n\t\t\t\talertError(response.errors[0].message)\n\t\t\t}\n\t\t})\n\t}\n\n\tfunction alertError(error){\n\t\tconst delimiter = '= '\n\t\tconst start = 2,\n\t\ttokens = error.split(delimiter).slice(start),\n\t\tresult = tokens.join(delimiter); // those.that\n\t\talert.show(result)\n\t}\n\n\tfunction ChangeAuthType () {\n\t\t//func is only called when type is sms as button only shown on that page. added switch from email for future\n\t\tif (rendertype === \"sms\") {\n\t\t\tResendOTP(\"!email\")\n\t\t\tsetRenderType(\"email\")\n\t\t\t\n\t\t} else {\n\t\t\tResendOTP(\"!sms\")\n\t\t\tsetRenderType(\"sms\")\n\t\t\t\n\t\t}\n\t}\n\n\n\n\tfunction ConfirmSms () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\n\t\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t\t{\"Enter code sent to *******\" + address[0]}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"mobileotp\" id=\"sms\"/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div >\n\t\t\t\t\t<button  type=\"button\" onClick={() => ResendOTP(\"!sms\")}>\n\t\t\t\t\t\tresend code\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div >\n\t\t\t\t\t<button  type=\"button\" onClick={() => ChangeAuthType()}>\n\t\t\t\t\t\tdont have acccess to phone\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\n\t\t\t\t</div>\n\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={updateHybrid}>\n\t\t\t\t\t\tVerify\n\t\t\t\t</button>\n\t\t\t</>\n\t\t)\n\t}\n\n\tfunction ConfirmEmail () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\n\t\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t\t{\"Enter code sent to email \" + address[1] + \"*******\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"emailotp\" id=\"email\"/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div >\n\t\t\t\t\t<button  type=\"button\" onClick={() => ResendOTP(\"!email\")}>\n\t\t\t\t\t\tresend code\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={updateHybrid}>\n\t\t\t\t\t\tVerify\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t</>\n\t\t)\n\t}\n\n\tfunction ConfirmPassword () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\n\t\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t\tEnter your password\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"password is required\">\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"pass\" id=\"password\"/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={updateHybrid}>\n\t\t\t\t\t\tVerify\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</>\n\t\t)\n\t}\n\n\tfunction Update () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\n\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t{\"Enter your new \" + resetdata.UpdateType}\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"reset\" id=\"resethybrid\"/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\n\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={updateHybrid}>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-full text-center p-t-55\">\n\t\t\t\t\t<button onClick={() => setPage(\"updatedetails\")}>Back to account details</button>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tfunction Header () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<span className=\"login100-form-title p-b-53\">\n\t\t\t\t\t<h3><i class=\"fa fa-lock fa-4x\"></i></h3>\n\t\t\t\t</span>\n\t\t\t\t<div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\t\n\n\n\t\n\n\tfunction HighSecurity () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ConfirmSms/>\n\t\t\t\t<ConfirmEmail/>\n\t\t\t</>\n\t\t)\n\t}\n\n\n\tfunction ConfirmUpdate () {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"limiter\">\n      \t\t\t\t<div className=\"container-login100\" >\n       \t\t\t\t\t<div className=\"wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33\">\n          \t\t\t\t\t<form className=\"login100-form validate-form flex-sb flex-w\">\n\t\t\t\t\t\t\t\t<Header/>\n\t\t\t\t\t\t\t\t{rendertype === \"password\" && <ConfirmPassword/>}\n\t\t\t\t\t\t\t\t{rendertype === \"email\" && <ConfirmEmail/>}\n\t\t\t\t\t\t\t\t{rendertype === \"sms\" && <ConfirmSms/>}\n\t\t\t\t\t\t\t\t{rendertype === \"update\" && <Update/>}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn ( \n\t\t<>\n\t\t\t\n\t\t\t{page === \"default\" && <ConfirmUpdate /> }\n\t\t\t{page === \"updatedetails\" && <UpdateDetails username={resetdata.Username}/>}\n\t\t\t{page === \"home\" && <Home sessionuser={resetdata.Username} viewing ={resetdata.Username} page={\"home\"}/>}\n\t\t\t\n\t\t</>\n\t)\n};\n\n\n// if password is a match redirect to profile page\n\t\t\t// switch (stage) {\n\t\t\t// \tcase \"stage1\":\n\t\t\t// \t\tconsole.log(\"response is proceed in stage 1 setting states\")\n\t\t\t// \t\t//setResetData({...resetdata, RequestType: \"stage2\"});\n\t\t\t// \t\t//setStage(\"stage2\")\n\t\t\t// \t\tconsole.log(\"have set stage2, setting rendertype to authtype returned:\", response.data.SecureUpdate.AuthType, \"authtype piped in\", authtype)\n\t\t\t// \t\tsetRenderType(authtype)//update auth from default email everyone gets \n\t\t\t// \t\tbreak;\n\t\t\t// \tcase \"stage2\":\n\t\t\t// \t\t//setMobileOtp(response.data.OTP_Mobile)\n\t\t\t// \t\tsetResetData({...resetdata, RequestType: \"update\"});\n\t\t\t// \t\tsetStage(\"update\")\n\t\t\t// \t\tsetRenderType(\"update\")\n\t\t\t// \t\tbreak;\n\t\t\t// \tcase \"update\":\n\t\t\t// \t\talert.show(updatetype + \" updated\")\n\t\t\t// \t\tlocalStorage.setItem('jwt_token', response.data.SecureUpdate.Token) // Store JWT in storage\n\t\t\t// \t\tresetdata.UpdateType === \"Username\" && setResetData({...resetdata,  Username: resetdata.UpdateData  });\n\t\t\t\t\t  \n\t\t\t// \t\t  //setUsername(updatevalue) \n\t\t\t// \t\tsetPage(\"home\")\n\t\t\t// \t\tbreak;","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/SigninHybrid.jsx",["90","91","92","93","94"],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/Home.jsx",["95","96","97","98"],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/RequestOTP.jsx",[],[],"/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/EditProfile.jsx",["99","100","101","102","103","104"],[],"import { useEffect, useState} from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ChkAuth from './chkAuth';\nimport SendData from './SendData';\nimport bkpic from '../images/profbkup.jpg';\nimport Home from './Home';\n  \nexport default function RenderProfileSetup (props) { \n  const [sessionuser, setSessionUser] = useState (props.sessionuser)\n  const[cmt, setcmt] = useState({Posts:[], Photos: []})\n  const [dp, setDp] = useState(false); // hide/show div\n  const [page, setPage] = useState(\"default\"); // hide/show div\n  let Page =  \"Bio\"\n\n  console.log(\"in RenderProfileSetup, sessionuser:\", sessionuser)\n\n  useEffect( () => {\n        getCmt().then(cmtz => {\n          if (cmtz) {\n          setcmt(cmtz)\n          console.log(\"use effet get coment users data object is :\", cmtz)\n        }   \n    })\n  },[]);\n\n  function GoHome () {\n\t\tconsole.log(\"going home, username:\", sessionuser)\n\t\tsetPage(\"home\")\n\t}\n  \n  function Logout (){\n    localStorage.removeItem('jwt_token')\n    //Navigate (\"/\")\n  }\n\n  async function getCmt (user2find) { // sends Username, password from input, then backend creates s3 bucket in Username and stores details on mongo\n  \n    let data = {Username: sessionuser}\n\n    let queryType\n\n    if (Page === \"All\") {\n       queryType = \"GetAllComments\"\n    } else {\n       queryType =\"GetUserComments\"\n    }\n\n\n    if (user2find) {\n       data.Username = sessionuser\n    }\n\n\n    let gqlRequest = \"query \" + queryType + \" ($Username: String!){  \" + queryType + \" (input: $Username) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\n    let response = await SendData(gqlRequest, data)\n    if ( \"errors\" in response ){ // if password is a match redirect to profile page\n      //{ProcessErrorAlerts(\"hi\", \"hi\")}\n      console.log(\"error retrieving data\", response.errors[0].message )\n      return false\n      \n    } else {\n       return response.data[queryType] \n    }\n }\n\n\n  async function updateBio () { \n    \n    const bio = document.getElementById('bioBox').value\n\n    let variables = {data: {Username: sessionuser, Bio: bio}}\n\n    let gqlRequest = \"mutation UpdateBio ($data: UpdateBioInput!){ UpdateBio(input: $data) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\n\t\t\n\t\tlet response = await SendData(gqlRequest, variables)\n\n\t\t\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\n      //{ProcessErrorAlerts(\"hi\", \"hi\")}\n      console.log(\"error updating bio\", response.errors[0].message )\n      return false\n      \n    } else { // if password is a match redirect to profile page\n\t\t\tconsole.log(\"saved bio\")\n      setcmt(response.data.UpdateBio) // store users data object\n      setDp(!dp) // show bio edit box\n\t\t} \n  }\n\n  async function addPhotos (event) {\n    if (event) {\n      let file = (event.target.files[0])\n      var data = new FormData() \n      data.append('file', file)\n      data.append('user', sessionuser)\n      data.append('type', 'addPhotos')\n    \n      let options = {\n        method: 'POST',\n        body: data, \n      }\n\n      let postUrl = process.env.REACT_APP_BACKEND_UPLOAD +  '/postfile/' + sessionuser \n      let response = await fetch(postUrl, options)\n      let convert = await response.json ()\n      if ( response.status === 401 || response.status === 400){\n        console.log(\"your pic didn't save, please try again\")\n       } else if ( response.status === 200){ \n        console.log(\"added pic to users photos\")\n        setcmt(convert)\n       }\n      \n    }\n  };\n\n  function triggerClick(event){ // clicking image triggers upload button click\n    var myButton = document.getElementById(event.target.name);\n    if ( myButton ) {\n      myButton.click()\n    }\n  }\n\n  async function addProfilePic (event) {\n    if (event) {\n      let file = (event.target.files[0])\n      var data = new FormData() \n      data.append('file', file)\n      data.append('user', sessionuser)\n      data.append('type', 'profPic')\n    \n      let options = {\n        method: 'POST',\n        body: data, \n      }\n\n      let ProfUrl = process.env.REACT_APP_BACKEND_UPLOAD + '/postfile/' + sessionuser\n      let response = await fetch(ProfUrl, options)\n      let convert = await response.json ()\n      document.getElementById(\"profpic11\").src = convert.Profpic // get posted img address and change profile picture\n      \n    }\n  };\n\n  function LandingPage() {\n    return (\n      <>\n        <span className=\"login100-form-title p-b-53\">\n          Create your profile\n        </span>\n          {/*  <!--profile pic--> */}\n          <div className=\"row\">\n            <div class=\"col\"></div>\n            <div class=\"col\"></div>\n            <div class=\"col\"></div>\n            <div class=\"col\"></div>\n              <div className=\"col\" >\n                <div className=\"profpics\">\n                  {cmt.Profpic ? <img className=\"profpics\" id= \"profpic11\" name=\"profpic1\"  onClick={(e)=>  {e.preventDefault(); triggerClick(e)}} alt=\"alt\" src={cmt.Profpic}  \n                    data-holder-Rendered=\"true\"/> \n                    :\n                    <img className=\"profpics\" id= \"profpic11\" name=\"profpic1\"  onClick={(e)=>  {e.preventDefault(); triggerClick(e)}} alt=\"alt\" src={bkpic}  \n                    data-holder-Rendered=\"true\"/>\n                  }\n                </div>\n              </div>\n            <div className=\"visually-hidden\">\n                <div>\n                      <input id=\"profpic1\" type=\"file\" className=\"blocked\" onChange={addProfilePic}  name= \"uploader1\"/>\n                </div>\n            </div>\n              <div className=\"col-md-4 mb-3\" >\n            </div>\n            <div className=\"visually-hidden\"></div>\n          </div>    \n        <div className=\"w-full text-center p-t-55\">\n        <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" style={{marginRight:\"10px\"}} onClick={(e) => {e.preventDefault(); GoHome()}}>View Profile</a>\n        <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" onClick={(e) => {e.preventDefault(); Logout()}}>Log Out</a>\n        </div>               \n        <div className=\"p-t-13 p-b-9\"></div>\n        <div className=\"wrap-input100 validate-input\">{cmt.Bio ? cmt.Bio : \"You haven't added a bio yet. Click to add one now!\"}</div>\n        <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" style={{marginTop: \"10px\"}} onClick={(e) => {e.preventDefault(); setDp(!dp)}}>Edit Bio</a>\n        {dp && \n        <>\n          <div className=\"wrap-input100 validate-input\" style={{ display: dp }}>\n            ​<span className=\"txt10\">\n              Max 70 characters\n            </span> \n            <span><textarea maxLength=\"70\" id=\"bioBox\" rows=\"10\" cols=\"10\"></textarea></span>\n          </div>\n          <div className=\"container-login100-form-btn m-t-17\">\n            <button className=\"login100-form-btn\" type=\"button\" onClick={(e) =>{e.preventDefault(); updateBio()}}>\n              Save Changes\n            </button>\n          </div>\n        </>\n        }\n        {sessionuser === sessionuser &&\n        <div className=\"w-full text-center p-t-55\">\n          <div className=\"connected-container\">\n            <div className=\"gif-grid\">\n            {/* map through users images */}\n                {cmt.Photos.map((pic) => (\n                  <div className=\"gif-item\" key={pic}>\n                      <img src={pic} alt={pic} />\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n        }\n        <div>\n          <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" name=\"mediaUplaod\" style={{marginTop: \"10px\"}} onClick={(e) => {e.preventDefault(); triggerClick(e)}}>Add Photos</a>\n        </div>  \n        <div>\n            <input id=\"mediaUplaod\" type=\"file\" className=\"blocked\" onChange={(e)=> addPhotos(e)}  name= \"uploader1\"/>\n        </div>\n        <div>\n        </div>\n      </>\n    )\n  }\n\n  return ( \n    <>\n      \n      {page === \"default\" && <LandingPage />}\n      {page === \"home\" &&  <Home sessionuser={sessionuser} viewing={sessionuser} page={\"home\"}/>}\n      \n    </>\n    )\n\n}","/home/dev/go/Social-Network-Microservice/frontend-react/src/routes/Logout.jsx",[],[],{"ruleId":"105","severity":1,"message":"106","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":21},{"ruleId":"105","severity":1,"message":"109","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":17},{"ruleId":"105","severity":1,"message":"110","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"105","severity":1,"message":"111","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":14},{"ruleId":"105","severity":1,"message":"112","line":221,"column":9,"nodeType":"107","messageId":"108","endLine":221,"endColumn":24},{"ruleId":"105","severity":1,"message":"113","line":225,"column":9,"nodeType":"107","messageId":"108","endLine":225,"endColumn":26},{"ruleId":"105","severity":1,"message":"114","line":233,"column":9,"nodeType":"107","messageId":"108","endLine":233,"endColumn":28},{"ruleId":"105","severity":1,"message":"115","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"116","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":18},{"ruleId":"105","severity":1,"message":"117","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"118","line":10,"column":9,"nodeType":"107","messageId":"108","endLine":10,"endColumn":17},{"ruleId":"105","severity":1,"message":"119","line":10,"column":19,"nodeType":"107","messageId":"108","endLine":10,"endColumn":30},{"ruleId":"105","severity":1,"message":"120","line":11,"column":19,"nodeType":"107","messageId":"108","endLine":11,"endColumn":30},{"ruleId":"105","severity":1,"message":"121","line":13,"column":9,"nodeType":"107","messageId":"108","endLine":13,"endColumn":20},{"ruleId":"105","severity":1,"message":"122","line":13,"column":22,"nodeType":"107","messageId":"108","endLine":13,"endColumn":36},{"ruleId":"105","severity":1,"message":"123","line":66,"column":11,"nodeType":"107","messageId":"108","endLine":66,"endColumn":21},{"ruleId":"105","severity":1,"message":"119","line":12,"column":19,"nodeType":"107","messageId":"108","endLine":12,"endColumn":30},{"ruleId":"105","severity":1,"message":"124","line":254,"column":11,"nodeType":"107","messageId":"108","endLine":254,"endColumn":23},{"ruleId":"105","severity":1,"message":"120","line":10,"column":19,"nodeType":"107","messageId":"108","endLine":10,"endColumn":30},{"ruleId":"105","severity":1,"message":"125","line":11,"column":9,"nodeType":"107","messageId":"108","endLine":11,"endColumn":17},{"ruleId":"105","severity":1,"message":"126","line":11,"column":19,"nodeType":"107","messageId":"108","endLine":11,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":12,"column":19,"nodeType":"107","messageId":"108","endLine":12,"endColumn":30},{"ruleId":"105","severity":1,"message":"127","line":13,"column":18,"nodeType":"107","messageId":"108","endLine":13,"endColumn":28},{"ruleId":"105","severity":1,"message":"128","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":15},{"ruleId":"105","severity":1,"message":"129","line":15,"column":24,"nodeType":"107","messageId":"108","endLine":15,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":38,"column":5,"nodeType":"132","endLine":38,"endColumn":7,"suggestions":"133"},{"ruleId":"105","severity":1,"message":"134","line":160,"column":19,"nodeType":"107","messageId":"108","endLine":160,"endColumn":28},{"ruleId":"105","severity":1,"message":"135","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"105","severity":1,"message":"136","line":2,"column":23,"nodeType":"107","messageId":"108","endLine":2,"endColumn":32},{"ruleId":"105","severity":1,"message":"128","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":15},{"ruleId":"105","severity":1,"message":"129","line":9,"column":23,"nodeType":"107","messageId":"108","endLine":9,"endColumn":37},{"ruleId":"130","severity":1,"message":"131","line":24,"column":5,"nodeType":"132","endLine":24,"endColumn":7,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":197,"column":10,"nodeType":"140","messageId":"141","endLine":197,"endColumn":37},"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'SignUp' is defined but never used.","'SignIn' is defined but never used.","'handleSMSChange' is assigned a value but never used.","'handleEmailChange' is assigned a value but never used.","'handleHighSecChange' is assigned a value but never used.","'useEffect' is defined but never used.","'RequestOTP' is defined but never used.","'useAlert' is defined but never used.","'authtype' is assigned a value but never used.","'setAuthType' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","'alertError' is defined but never used.","'HighSecurity' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'ChkAuth' is defined but never used.","'setSessionUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCmt'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'updateBio' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.",["143"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},"Update the dependencies array to be: [getCmt]",{"range":"147","text":"148"},{"range":"149","text":"148"},[1517,1519],"[getCmt]",[828,830]]