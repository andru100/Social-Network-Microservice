[{"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\index.js":"1","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\App.js":"2","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\PublicRoutes.jsx":"3","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignUp.jsx":"4","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignIn.jsx":"5","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProfileSetup.jsx":"6","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\Profile.jsx":"7","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\chkAuth.jsx":"8","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SendData.jsx":"9","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\Verify.jsx":"10","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetRequest.jsx":"11","C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetComplete.jsx":"12","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\index.js":"13","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\App.js":"14","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\PublicRoutes.jsx":"15","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignIn.jsx":"16","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetRequest.jsx":"17","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignUp.jsx":"18","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetComplete.jsx":"19","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\Profile.jsx":"20","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProfileSetup.jsx":"21","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\Verify.jsx":"22","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\chkAuth.jsx":"23","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SendData.jsx":"24","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmSms.jsx":"25","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmEmail.jsx":"26","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmSmsSignIn.jsx":"27","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProcessErrorAlerts.jsx":"28","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetPassword.jsx":"29"},{"size":384,"mtime":1678725097163,"results":"30","hashOfConfig":"31"},{"size":580,"mtime":1678725095914,"results":"32","hashOfConfig":"31"},{"size":1045,"mtime":1678743528742,"results":"33","hashOfConfig":"31"},{"size":2777,"mtime":1678725097166,"results":"34","hashOfConfig":"31"},{"size":2740,"mtime":1679029843022,"results":"35","hashOfConfig":"31"},{"size":8322,"mtime":1678725097165,"results":"36","hashOfConfig":"31"},{"size":15710,"mtime":1678725097164,"results":"37","hashOfConfig":"31"},{"size":629,"mtime":1678725097167,"results":"38","hashOfConfig":"31"},{"size":820,"mtime":1678725097165,"results":"39","hashOfConfig":"31"},{"size":2204,"mtime":1678740076732,"results":"40","hashOfConfig":"31"},{"size":2394,"mtime":1678738874196,"results":"41","hashOfConfig":"31"},{"size":2406,"mtime":1678743808621,"results":"42","hashOfConfig":"31"},{"size":847,"mtime":1679606412145,"results":"43","hashOfConfig":"44"},{"size":580,"mtime":1679234757825,"results":"45","hashOfConfig":"44"},{"size":1045,"mtime":1679520812150,"results":"46","hashOfConfig":"44"},{"size":3570,"mtime":1679766315187,"results":"47","hashOfConfig":"44"},{"size":1912,"mtime":1679777962571,"results":"48","hashOfConfig":"44"},{"size":4174,"mtime":1679585859449,"results":"49","hashOfConfig":"44"},{"size":2618,"mtime":1679585722942,"results":"50","hashOfConfig":"44"},{"size":15924,"mtime":1679585492695,"results":"51","hashOfConfig":"44"},{"size":8760,"mtime":1679585666427,"results":"52","hashOfConfig":"44"},{"size":2406,"mtime":1679585901447,"results":"53","hashOfConfig":"44"},{"size":818,"mtime":1679584884326,"results":"54","hashOfConfig":"44"},{"size":617,"mtime":1679601543660,"results":"55","hashOfConfig":"44"},{"size":2752,"mtime":1679584924327,"results":"56","hashOfConfig":"44"},{"size":2554,"mtime":1679584878340,"results":"57","hashOfConfig":"44"},{"size":3352,"mtime":1679766935864,"results":"58","hashOfConfig":"44"},{"size":684,"mtime":1679602078595,"results":"59","hashOfConfig":"44"},{"size":3850,"mtime":1679779221290,"results":"60","hashOfConfig":"44"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l72p3k",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a8ug6x",{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"103"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"103"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\index.js",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\App.js",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\PublicRoutes.jsx",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignUp.jsx",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignIn.jsx",["156"],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProfileSetup.jsx",["157"],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\Profile.jsx",["158"],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\chkAuth.jsx",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\SendData.jsx",[],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\Verify.jsx",["159","160"],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetRequest.jsx",["161","162"],[],"C:\\Users\\devteam\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetComplete.jsx",["163","164"],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\index.js",[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\App.js",[],[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\PublicRoutes.jsx",[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignIn.jsx",["165","166","167","168","169"],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetRequest.jsx",["170","171","172","173","174","175","176","177","178","179","180","181"],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SignUp.jsx",["182","183","184"],[],"import React from 'react';\r\nimport { useNavigate, useEffect, Link } from 'react-router-dom';\r\nimport SendData from './SendData';\r\nimport ConfirmSms from './ConfirmSms';\r\n\r\n\r\nexport default function RenderSignUp () {\r\n\r\n  const Navigate = useNavigate();\r\n  const [stage, setStage] = React.useState(\"stage1\");\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [mobile, setMobile] = React.useState(\"\");\r\n\r\n  async function signup () { // sends username, password, email from input, backend then creates s3 bucket and stores details on mongodb\r\n  \r\n    const temp_username = document.getElementById('signupusername').value;\r\n    const temp_password = document.getElementById('signuppass').value;\r\n    const temp_email = document.getElementById('signupemail').value;\r\n    const temp_mobile = document.getElementById('signupmobile').value;\r\n      \r\n    let signupdata = \r\n      { data: {\r\n        Username: temp_username,\r\n        Password: temp_password,\r\n        Email:  temp_email,\r\n        Mobile: temp_mobile,\r\n        RequestType: \"stage1\"\r\n        }\r\n      }\r\n\r\n\t\tlet gqlRequest = \"mutation SignUp ($data: SecurityCheckInput!){ SignUp(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signupdata, 'signup')\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n      //{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n      console.log(\"error procceeding with sign up\", response.errors[0].message )\r\n      return false\r\n      \r\n    } else if ( response.data.SignUp.Token == \"proceed\" ){ // if password is a match redirect to profile page\r\n      alert(\"Please enter OTP sent to your mobile\")\r\n      setUsername(temp_username)\r\n      setPassword(temp_password)\r\n      setEmail(temp_email)\r\n      setMobile(temp_mobile)\r\n      setStage(\"stage2\")\r\n\t\t} \r\n  }\r\n\r\n  return (\r\n    <>\r\n    {stage === \"stage2\" ?\r\n\r\n      <ConfirmSms username={username} password={password} email={email} mobile={mobile} />\r\n      :\r\n      <>\r\n        <span className=\"login100-form-title p-b-53\">\r\n          Sign Up\r\n        </span>\r\n        <div className=\"p-t-31 p-b-9\">\r\n          <span className=\"txt1\">\r\n            Username\r\n          </span>\r\n        </div>\r\n        <div className=\"wrap-input100 validate-input\" data-validate = \"Username is required\">\r\n          <input className=\"input100\" type=\"text\" name=\"username\" id=\"signupusername\"/>\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n        <div className=\"p-t-13 p-b-9\">\r\n          <span className=\"txt1\">\r\n            Password\r\n          </span>\r\n        </div>\r\n        <div className=\"wrap-input100 validate-input\" data-validate = \"Password is required\">\r\n          <input className=\"input100\" type=\"password\" name=\"pass\" id=\"signuppass\" />\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n            <div className=\"p-t-13 p-b-9\">\r\n          <span className=\"txt1\">\r\n            Mobile\r\n          </span>\r\n        </div>\r\n        <div className=\"wrap-input100 validate-input\" data-validate = \"Mobile no. is required\">\r\n          <input className=\"input100\" type=\"mobile\" name=\"pass\" id=\"signupmobile\" />\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n        <div className=\"p-t-13 p-b-9\">\r\n          <span className=\"txt1\">\r\n            Email\r\n          </span>\r\n        </div>\r\n        <div className=\"wrap-input100 validate-input\" data-validate = \"Email is required\">\r\n          <input className=\"input100\" type=\"email\" name=\"pass\" id=\"signupemail\" />\r\n          <span className=\"focus-input100\"></span>\r\n        </div>\r\n\r\n        <div className=\"container-login100-form-btn m-t-17\">\r\n          <button className=\"login100-form-btn\" type=\"button\" onClick={signup} Navigate to = \"/signIn\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-full text-center p-t-55\">\r\n          <span className=\"txt2\">\r\n            Already a member? \r\n          </span>\r\n\r\n          <Link to=\"/signIn\">Sign in now</Link> \r\n        </div>\r\n      </>\r\n    }\r\n    </> \r\n  );\r\n\r\n  \r\n\r\n}","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetComplete.jsx",["185","186"],[],"import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport ChkAuth from './chkAuth';\r\nimport Google from '../images/icons/icon-google.png'\r\nimport SendData from './SendData';\r\n\r\nexport default function RenderResetComplete () {\r\n\r\n\tconst Navigate = useNavigate();\r\n\r\n\tuseEffect( () => { //check if signed in and go to profile page\r\n\t\tChkAuth().then(user => {\r\n\t\t  if (user) {\r\n\t\t  Navigate(\"/profile/\" + user + \"/home\")\r\n\t\t  } \r\n\t\t})\r\n\t},[]);\r\n\r\n\t\r\n\tasync function resetcomplete(){\r\n\t\t\r\n\t\tconst username = document.getElementById('username').value;\r\n\t\tconst password = document.getElementById('pass').value;\r\n\t\t\t\r\n\t\tlet signindata = {data: {\r\n\t\t\tUsername: username,\r\n\t\t\tPassword: password\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet gqlRequest = \"mutation SignIn ($data: UsrsigninInput!){ SignIn(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signindata, 'signin')\r\n\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n\t\t\t//{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n\t\t\tconsole.log(\"error updating credentials\", response.errors[0].message )\r\n\t\t\treturn false\r\n\t\t\t\r\n\t\t  } else {// if password is a match redirect to profile page\r\n\t\t\tlocalStorage.setItem('jwt_token', response.data.SignIn.Token) // Store JWT in storage\r\n\t\t\tNavigate (\"/Profile/\" + username + \"/home\")\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n  return (  \r\n    <>\r\n      <span className=\"login100-form-title p-b-53\">\r\n\t\t\t\t\t\tCreate your new password\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className=\"p-t-31 p-b-9\">\r\n\t\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tnew password\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"new password is required\">\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"username\" id=\"username\"/>\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-t-13 p-b-9\">\r\n\t\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tconfirm password\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{/* <a href=\"/\" className=\"txt2 bo1 m-l-5\">\r\n\t\t\t\t\t\t\tForgot?\r\n\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"Mobile no. is required\">\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"password\" name=\"pass\" id=\"pass\" />\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={resetcomplete}>\r\n\t\t\t\t\t\t\tupdate password\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"w-full text-center p-t-55\">\r\n\t\t\t\t\t\t<Link to=\"/signIn\">Back to log in</Link>\r\n\t\t\t\t\t</div>\r\n    </>\r\n  )\r\n};","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\Profile.jsx",["187"],[],"import { React, memo } from \"react\";\r\nimport { useState, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport ChkAuth from './chkAuth';\r\nimport SendData from './SendData';\r\n\r\nfunction Home () {\r\n   const [sessionUser, setSessionUser] = useState (\"\")\r\n   const[cmt, setcmt] = useState({Posts:[], Photos: []}) // holds users data object\r\n   const [viewReply, setviewReply] = useState(false); // use to show comments when clicked\r\n   const [viewLikes, setviewLikes] = useState(false); // use to show likes when clicked\r\n   const Navigate = useNavigate();\r\n   var {User, Page,} = useParams()\r\n\r\n   let Today = new Date().toLocaleDateString()\r\n\r\n  useEffect( () => {\r\n    ChkAuth().then(user => {\r\n      if (user) {\r\n         setSessionUser(user)\r\n         getCmt().then(cmtz => {\r\n            if (cmtz) {\r\n             setcmt(cmtz)\r\n             console.log(\"Users data object retrieved is:\", cmtz)\r\n            }\r\n         })\r\n      } else {\r\n         setSessionUser(false)\r\n         alert(\"You need to sign in to view this page\")\r\n         Navigate(\"/signIn\")\r\n      }\r\n    })\r\n  },[Navigate]);\r\n\r\n\r\n   async function getCmt (user2find) { // sends username, password from input, then backend creates s3 bucket in username and stores details on mongo\r\n  \r\n      let data = {Username: User}\r\n\r\n      let queryType\r\n\r\n      if (Page === \"All\") {\r\n         queryType = \"GetAllComments\"\r\n      } else {\r\n         queryType =\"GetUserComments\"\r\n      }\r\n\r\n      if (user2find) {\r\n         data.Username = sessionUser\r\n      }\r\n\r\n      let gqlRequest = \"query \" + queryType + \" ($Username: String!){  \" + queryType + \" (input: $Username) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n      let response = await SendData(gqlRequest, data)\r\n      if ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n\t\t\t//{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n\t\t\tconsole.log(\"Error retrieving user data\", response.errors[0].message )\r\n\t\t\t\r\n\t\t} else {\r\n         return response.data[queryType] \r\n      }\r\n   }\r\n\r\n\r\n   async function sendCmt (msgType, cmtAuthr, iD) { // sends comments, replies to comments and likes\r\n      let cmt = \"\" //in case msgType is reply and comment box not shown so causes null error\r\n      if (msgType === \"isCmt\") {\r\n         cmt = document.getElementById(\"cmt\").value \r\n      }   \r\n\r\n      if (msgType === \"isCmt\") {\r\n         let NewCmtInput  = { data: {\r\n            Username : cmtAuthr,\r\n            SessionUser: sessionUser,\r\n            MainCmt : cmt ,\r\n            Time : new Date().toLocaleTimeString('en-GB', { hour: \"numeric\", minute: \"numeric\"}),\r\n            Date : Today,\r\n            TimeStamp : Date.now(),    \r\n            ReturnPage: Page   ,\r\n            }\r\n         }\r\n\r\n         let gqlRequest = \"mutation NewComment ($data: SendCmtInput!){ NewComment (input: $data) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n         \r\n         SendData(gqlRequest, NewCmtInput).then((response)=> (\"errors\" in response) ? console.log(\"error posting data\") : setcmt(response.data.NewComment) ); \r\n      }\r\n      \r\n\r\n      if (msgType === \"isResponse\") {\r\n         let CommentResponse =  { data: {\r\n            AuthorUsername: cmtAuthr ,\r\n            ReplyUsername: sessionUser ,\r\n            ReplyComment:  document.getElementById(iD).value , \r\n            ReplyProfpic:  \"\" ,\r\n            PostIndx:   iD ,\r\n            ReturnPage: Page\r\n            }\r\n         }\r\n\r\n         let gqlRequest = \"mutation ReplyComment ($data: ReplyCommentInput!){ ReplyComment (input: $data) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n         const reply = await getCmt(sessionUser)\r\n         CommentResponse.data.ReplyProfpic = reply.Profpic\r\n         \r\n         SendData(gqlRequest, CommentResponse).then((response)=> (\"errors\" in response) ? console.log(\"error sending response to comment\") : setcmt(response.data.ReplyComment))\r\n      }\r\n\r\n\r\n      if (msgType === \"cmtLiked\") {\r\n         let SendLikeInput  = { data: {\r\n            Username:   cmtAuthr ,\r\n            LikedBy:   sessionUser ,\r\n            LikeByPic:   \"\",\r\n            PostIndx:   iD , \r\n            ReturnPage: Page   \r\n            }\r\n         }\r\n         let gqlRequest = \"mutation LikeComment ($data: SendLikeInput!){ LikeComment (input: $data) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n         getCmt(sessionUser).then((repliersData)=> {SendLikeInput.data.LikeByPic = repliersData.Profpic; SendData(gqlRequest, SendLikeInput).then((response)=> ( \"errors\" in response) ? console.log(\"error adding like\") : setcmt(response.data.LikeComment) ) ; })\r\n      }\r\n\r\n   }\r\n\r\n   function redirecter () {\r\n      Navigate(\"/signIn\")\r\n   }\r\n\r\n   function EditProfile (){\r\n      Navigate (\"/editProfile/\"+sessionUser)\r\n    }\r\n\r\n    function goToProfile (){\r\n      Navigate (\"/Profile/\" + User + \"/home\")\r\n    }\r\n\r\n    function goToAllPosts (){\r\n      Navigate (\"/profile/\" + User + \"/all\")\r\n    }\r\n\r\n    function goToPhotos () {\r\n       if (Page !== \"media\") { // for when your on media tab already\r\n         Navigate(\"/profile/\" + User + \"/media\")\r\n       }\r\n    }\r\n\r\n    function Logout (){\r\n      localStorage.removeItem('jwt_token')\r\n      Navigate (\"/\")\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n       \r\n<div className=\"container\">\r\n   <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n         <div id=\"content\" className=\"content content-full-width\">\r\n            {/* begin profile */}\r\n            <div className=\"profile\">\r\n               <div className=\"profile-header\">\r\n                  <div className=\"profile-header-cover\"></div>\r\n                  <div className=\"profile-header-content\">\r\n                     <div className=\"profile-header-img\">\r\n                        <img calssName=\"profpics\" src={cmt.Profpic} alt=\"\"/>\r\n                     </div>\r\n                     <div className=\"profile-header-info\">\r\n                        <h4 className=\"m-t-10 m-b-5\">{User}</h4>\r\n                        <p className=\"m-b-10\" style={{color:\"black\"}}>{cmt.Bio? cmt.Bio : \"Click the edit profile button to add a bio to your profile now.\"}</p>\r\n                        <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" style={{marginRight:\"10px\"}} onClick={(e)=> {e.preventDefault() ; EditProfile()}}>Edit Profile</a>\r\n                        <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" onClick={(e)=> {e.preventDefault(); Logout()}}>Log Out</a>\r\n                     </div>\r\n                  </div>\r\n                  {/* Navigation tabs */}\r\n                  <ul className=\"profile-header-tab nav nav-tabs\">\r\n                      {Page === \"x\" ? <li className=\"nav-item\"><a href=\"!\" className=\"nav-link active show\" data-toggle=\"tab\" onClick={(e) => { e.preventDefault() ; goToProfile()}}>PROFILE</a></li>: <li className=\"nav-item\"><a href=\"!\" className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => {e.preventDefault(); goToProfile()}}>PROFILE</a></li>} \r\n                      {Page === \"all\" ? <li className=\"nav-item\"><a href=\"!\" className=\"nav-link active show\" data-toggle=\"tab\" onClick={(e) => {e.preventDefault(); goToAllPosts()}}>FEED</a></li>: <li className=\"nav-item\"><a href=\"!\" className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => {e.preventDefault() ; goToAllPosts()}}>FEED</a></li>} \r\n                      {Page === \"media\" ? <li className=\"nav-item\"><a href=\"!\" className=\"nav-link active show\" data-toggle=\"tab\" onClick={(e) => {e.preventDefault(); goToPhotos()}}>MEDIA</a></li>: <li className=\"nav-item\"><a href=\"!\" className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => {e.preventDefault() ; goToPhotos()}}>MEDIA</a></li>} \r\n                      {Page === \"friends\" ? <li className=\"nav-item\"><a href=\"!\" className=\"nav-link active show\" data-toggle=\"tab\">MEDIA</a></li>: <li className=\"nav-item\"><a href=\"!\" className=\"nav-link\" data-toggle=\"tab\" onClick={() => {}}>FRIENDS</a></li>} \r\n                  </ul>\r\n               </div>\r\n            </div>\r\n            {/*show media page */}\r\n            {sessionUser && Page === \"media\" ? \r\n            <div className=\"connected-container\">\r\n               <div className=\"gif-grid\">\r\n                  {cmt.Photos.map((pic) => (\r\n                     <div className=\"gif-item\" key={pic}>\r\n                        <img src={pic} alt={pic} />\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n            : \r\n            <div></div>}\r\n            {/*render users profile page or news feed showing all comments*/}\r\n            {(sessionUser === User && Page !== \"media\") || (sessionUser && Page === \"all\") ? <div className=\"input\">\r\n                     <form action=\"\">\r\n                        <div className=\"input-group\">\r\n                           <textarea style={{height: \"36px\"}} type=\"text\" className=\"form-control rounded-corner\" id=\"cmt\" placeholder=\"Write a comment...\"/>\r\n                           <span className=\"input-group-btn p-l-10\">\r\n                              <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\" onClick={() => sendCmt(\"isCmt\", sessionUser, 0)}>Comment</button>\r\n                           </span>\r\n                        </div>\r\n                  </form>\r\n              </div> : <div></div>}\r\n            <div className=\"profile-content\">\r\n               <div className=\"tab-content p-0\">\r\n                  <div className=\"tab-pane fade active show\" id=\"profile-post\">\r\n                     <ul className=\"timeline\">\r\n                     { Page !== \"media\" ? \r\n                        cmt.Posts.map((userData)=> (\r\n                           <li>\r\n                           <div className=\"timeline-time\">\r\n                              <span className=\"date\">{userData.Date === Today ? \"Today\" : userData.Date}</span>\r\n                              <span className=\"time\">{userData.Time}</span>\r\n                           </div>\r\n                           <div className=\"timeline-icon\">\r\n                              <a href=\"!\">&nbsp;</a>\r\n                           </div>\r\n                           <div className=\"timeline-body\">\r\n                              <div className=\"timeline-header\">\r\n                                 <span className=\"userimage\"><img src={cmt.Profpic} alt=\"\"/></span>\r\n                                 <a className=\"username\" href= {process.env.REACT_APP_FRONTEND + \"/Profile/\" + userData.Username + \"/home\"}>{userData.Username}</a>\r\n                              </div>\r\n                              <div className=\"timeline-content\">\r\n                                 <p>\r\n                                    {userData.MainCmt}\r\n                                 </p>\r\n                              </div>\r\n                              <div className=\"timeline-likes\">\r\n                                 <div className=\"stats-left\">\r\n                                    <span className=\"fa-stack fa-fw stats-icon\">\r\n                                    <i className=\"fa fa-circle fa-stack-2x text-danger\"></i>\r\n                                    <i className=\"fa fa-heart fa-stack-1x fa-inverse t-plus-1\" onClick={()=>sendCmt(\"cmtLiked\", userData.Username, userData.PostNum)}></i>\r\n                                    </span>\r\n                                    <span className=\"stats-text\" onClick={() => {viewReply && setviewReply(!viewReply) ; setviewLikes(!viewLikes)}}>{userData.Likes?.length} Likes</span>\r\n                                    <span className=\"stats-text\" onClick={() => {viewLikes && setviewLikes(!viewLikes) ; setviewReply(!viewReply)}}>{userData.Comments?.length} Comments</span>\r\n                                    {viewLikes &&\r\n                                      userData.Likes.map((Likes)=> (\r\n                                          <div className=\"timeline-header\">\r\n                                          {<span className=\"userimage\"><img src={Likes.Profpic} alt=\"\"/></span>  }\r\n                                          <a ClassName = \"username\" href= {process.env.REACT_APP_FRONTEND + \"/Profile/\" + Likes.Username + \"/home\"}>{Likes.Username}</a> \r\n                                          </div> \r\n                                      ))\r\n                                    } \r\n                                    {viewReply &&\r\n                                      userData.Comments.map((replys)=> (\r\n                                       <div className=\"timeline-header\">\r\n                                          {<span className=\"userimage\"><img src={replys.Profpic} alt=\"\"/></span> }\r\n                                          <span ><a href= {process.env.REACT_APP_FRONTEND + \"/Profile/\" + replys.Username + \"/home\"}>{replys.Username}</a> <small></small></span>\r\n                                          <div>\r\n                                             <span>{replys.Comment}</span>\r\n                                          </div>\r\n                                       </div>\r\n                                      ))\r\n                                    } \r\n                                 </div>\r\n                                 <div className=\"stats\">\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"timeline-comment-box\">\r\n                                 <div className=\"input\">\r\n                                    <form action=\"\">\r\n                                       {sessionUser ? \r\n                                          <div className=\"input-group\">\r\n                                          <textarea type=\"text\" className=\"form-control rounded-corner\" id={userData.PostNum} style={{height:\"90px\", width:\"180px\"}} placeholder=\"Reply to the post...\"/>\r\n                                          <div style={{height:\"10px\", width:\"180px\"}}></div>\r\n                                          <span className=\"input-group-btn p-l-10\">\r\n                                             <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"  onClick={()=>sendCmt(\"isResponse\", userData.Username, userData.PostNum)}>Comment</button>\r\n                                          </span>\r\n                                          </div>\r\n                                          :\r\n                                          <div className=\"input-group\">\r\n                                          <input type=\"text\" className=\"form-control rounded-corner\" id={userData.PostNum} placeholder=\"Write a comment...\"/>\r\n                                          <span className=\"input-group-btn p-l-10\">\r\n                                             <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\" onClick={()=>redirecter()} >Sign In to Commment</button>\r\n                                          </span>\r\n                                          </div>}\r\n                                    </form>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </li>\r\n                        ))\r\n                        : \r\n                         <div></div>\r\n                     }\r\n                     </ul>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default memo(Home)","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProfileSetup.jsx",["188"],[],"import { useEffect, useState} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport ChkAuth from './chkAuth';\r\nimport SendData from './SendData';\r\nimport bkpic from '../images/profbkup.jpg';\r\n  \r\nexport default function RenderProfileSetup () { \r\n  const [sessionUser, setSessionUser] = useState (\"\")\r\n  const[cmt, setcmt] = useState({Posts:[], Photos: []})\r\n  const [dp, setDp] = useState(false); // hide/show div\r\n  let Page =  \"Bio\"\r\n  const Navigate = useNavigate();\r\n  var {User} = useParams()\r\n\r\n  useEffect( () => {\r\n    ChkAuth().then(user => {\r\n      if (user) {\r\n        setSessionUser(user)\r\n        getCmt().then(cmtz => {\r\n          if (cmtz) {\r\n          setcmt(cmtz)\r\n          console.log(\"returned users data object\", cmtz)\r\n          }\r\n        })\r\n      } else {\r\n         setSessionUser(false)\r\n         alert(\"You need to sign in to view this page\")\r\n         Navigate(\"/signIn\")\r\n      }\r\n    })\r\n  },[]);\r\n\r\n  function goToProfile (){\r\n    Navigate (\"/profile/\" + sessionUser + \"/home\")\r\n  }\r\n  \r\n  function Logout (){\r\n    localStorage.removeItem('jwt_token')\r\n    Navigate (\"/\")\r\n  }\r\n\r\n  async function getCmt (user2find) { // sends Username, password from input, then backend creates s3 bucket in Username and stores details on mongo\r\n  \r\n    let data = {Username: User}\r\n\r\n    let queryType\r\n\r\n    if (Page === \"All\") {\r\n       queryType = \"GetAllComments\"\r\n    } else {\r\n       queryType =\"GetUserComments\"\r\n    }\r\n\r\n\r\n    if (user2find) {\r\n       data.Username = sessionUser\r\n    }\r\n\r\n\r\n    let gqlRequest = \"query \" + queryType + \" ($Username: String!){  \" + queryType + \" (input: $Username) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n    let response = await SendData(gqlRequest, data)\r\n    if ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n      //{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n      console.log(\"error retrieving data\", response.errors[0].message )\r\n      return false\r\n      \r\n    } else {\r\n       return response.data[queryType] \r\n    }\r\n }\r\n\r\n\r\n  async function updateBio () { \r\n    \r\n    const bio = document.getElementById('bioBox').value\r\n\r\n    let variables = {data: {Username: User, Bio: bio}}\r\n\r\n    let gqlRequest = \"mutation UpdateBio ($data: UpdateBioInput!){ UpdateBio(input: $data) { Key ID Username Password Email Bio Profpic Photos LastCommentNum Posts { Username SessionUser MainCmt PostNum Time TimeStamp Date Comments { Username Comment Profpic } Likes { Username Profpic } } } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, variables)\r\n\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n      //{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n      console.log(\"error updating bio\", response.errors[0].message )\r\n      return false\r\n      \r\n    } else { // if password is a match redirect to profile page\r\n\t\t\tconsole.log(\"saved bio\")\r\n      setcmt(response.data.UpdateBio) // store users data object\r\n      setDp(!dp) // show bio edit box\r\n\t\t} \r\n  }\r\n\r\n  async function addPhotos (event) {\r\n    if (event) {\r\n      let file = (event.target.files[0])\r\n      var data = new FormData() \r\n      data.append('file', file)\r\n      data.append('user', User)\r\n      data.append('type', 'addPhotos')\r\n    \r\n      let options = {\r\n        method: 'POST',\r\n        body: data, \r\n      }\r\n\r\n      let postUrl = process.env.REACT_APP_BACKEND_UPLOAD +  '/postfile/' + User \r\n      let response = await fetch(postUrl, options)\r\n      let convert = await response.json ()\r\n      if ( response.status === 401 || response.status === 400){\r\n        console.log(\"your pic didn't save, please try again\")\r\n       } else if ( response.status === 200){ \r\n        console.log(\"added pic to users photos\")\r\n        setcmt(convert)\r\n       }\r\n      \r\n    }\r\n  };\r\n\r\n  function triggerClick(event){ // clicking image triggers upload button click\r\n    var myButton = document.getElementById(event.target.name);\r\n    if ( myButton ) {\r\n      myButton.click()\r\n    }\r\n  }\r\n\r\n  async function addProfilePic (event) {\r\n    if (event) {\r\n      let file = (event.target.files[0])\r\n      var data = new FormData() \r\n      data.append('file', file)\r\n      data.append('user', User)\r\n      data.append('type', 'profPic')\r\n    \r\n      let options = {\r\n        method: 'POST',\r\n        body: data, \r\n      }\r\n\r\n      let ProfUrl = process.env.REACT_APP_BACKEND_UPLOAD + '/postfile/' + User\r\n      let response = await fetch(ProfUrl, options)\r\n      let convert = await response.json ()\r\n      document.getElementById(\"profpic11\").src = convert.Profpic // get posted img address and change profile picture\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n            <>\r\n              <span className=\"login100-form-title p-b-53\">\r\n                Create your profile\r\n              </span>\r\n                {/*  <!--profile pic--> */}\r\n                <div className=\"row\">\r\n                  <div class=\"col\"></div>\r\n                  <div class=\"col\"></div>\r\n                  <div class=\"col\"></div>\r\n                  <div class=\"col\"></div>\r\n                    <div className=\"col\" >\r\n                      <div className=\"profpics\">\r\n                        {cmt.Profpic ? <img className=\"profpics\" id= \"profpic11\" name=\"profpic1\"  onClick={(e)=>  {e.preventDefault(); triggerClick(e)}} alt=\"alt\" src={cmt.Profpic}  \r\n                          data-holder-Rendered=\"true\"/> \r\n                          :\r\n                          <img className=\"profpics\" id= \"profpic11\" name=\"profpic1\"  onClick={(e)=>  {e.preventDefault(); triggerClick(e)}} alt=\"alt\" src={bkpic}  \r\n                          data-holder-Rendered=\"true\"/>\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  <div className=\"visually-hidden\">\r\n                      <div>\r\n                            <input id=\"profpic1\" type=\"file\" className=\"blocked\" onChange={addProfilePic}  name= \"uploader1\"/>\r\n                      </div>\r\n                  </div>\r\n                    <div className=\"col-md-4 mb-3\" >\r\n                  </div>\r\n                  <div className=\"visually-hidden\"></div>\r\n                </div>    \r\n              <div className=\"w-full text-center p-t-55\">\r\n              <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" style={{marginRight:\"10px\"}} onClick={(e) => {e.preventDefault(); goToProfile()}}>View Profile</a>\r\n              <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" onClick={(e) => {e.preventDefault(); Logout()}}>Log Out</a>\r\n              </div>               \r\n              <div className=\"p-t-13 p-b-9\"></div>\r\n              <div className=\"wrap-input100 validate-input\">{cmt.Bio ? cmt.Bio : \"You haven't added a bio yet. Click to add one now!\"}</div>\r\n              <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" style={{marginTop: \"10px\"}} onClick={(e) => {e.preventDefault(); setDp(!dp)}}>Edit Bio</a>\r\n              {dp && \r\n              <>\r\n                <div className=\"wrap-input100 validate-input\" style={{ display: dp }}>\r\n                  ​<span className=\"txt10\">\r\n                    Max 70 characters\r\n                  </span> \r\n                  <span><textarea maxLength=\"70\" id=\"bioBox\" rows=\"10\" cols=\"10\"></textarea></span>\r\n                </div>\r\n                <div className=\"container-login100-form-btn m-t-17\">\r\n                  <button className=\"login100-form-btn\" type=\"button\" onClick={(e) =>{e.preventDefault(); updateBio()}}>\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </>\r\n              }\r\n              {sessionUser === User &&\r\n              <div className=\"w-full text-center p-t-55\">\r\n                <div className=\"connected-container\">\r\n                  <div className=\"gif-grid\">\r\n                  {/* map through users images */}\r\n                      {cmt.Photos.map((pic) => (\r\n                        <div className=\"gif-item\" key={pic}>\r\n                            <img src={pic} alt={pic} />\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              }\r\n              <div>\r\n                <a href=\"!\" className=\"btn btn-sm btn-info mb-2\" name=\"mediaUplaod\" style={{marginTop: \"10px\"}} onClick={(e) => {e.preventDefault(); triggerClick(e)}}>Add Photos</a>\r\n              </div>  \r\n              <div>\r\n                  <input id=\"mediaUplaod\" type=\"file\" className=\"blocked\" onChange={(e)=> addPhotos(e)}  name= \"uploader1\"/>\r\n              </div>\r\n              <div>\r\n              </div>\r\n            </>\r\n          )\r\n}","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\Verify.jsx",["189","190"],[],"import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport ChkAuth from './chkAuth';\r\nimport Google from '../images/icons/icon-google.png'\r\nimport SendData from './SendData';\r\n\r\nexport default function RenderVerify () {\r\n\r\n\tconst mobile = \"07897657654\"\r\n\r\n\tconst Navigate = useNavigate();\r\n\r\n\tuseEffect( () => { //check if signed in and go to profile page\r\n\t\tChkAuth().then(user => {\r\n\t\t  if (user) {\r\n\t\t  Navigate(\"/profile/\" + user + \"/home\")\r\n\t\t  } \r\n\t\t})\r\n\t},[]);\r\n\r\n\t\r\n\tasync function verify(){\r\n\t\t\r\n\t\tconst username = document.getElementById('username').value;\r\n\t\tconst password = document.getElementById('pass').value;\r\n\t\t\t\r\n\t\tlet signindata = {data: {\r\n\t\t\tUsername: username,\r\n\t\t\tPassword: password\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet gqlRequest = \"mutation SignIn ($data: UsrsigninInput!){ SignIn(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signindata, 'signin')\r\n\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n\t\t\t//{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n\t\t\tconsole.log(\"error verifying\", response.errors[0].message )\r\n\t\t\treturn false\r\n\t\t\t\r\n\t\t  } else { // if password is a match redirect to profile page\r\n\t\t\tlocalStorage.setItem('jwt_token', response.data.SignIn.Token) // Store JWT in storage\r\n\t\t\tNavigate (\"/Profile/\" + username + \"/home\")\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n  return (  \r\n    <>\r\n      <span className=\"login100-form-title p-b-53\">\r\n\t  \t\t\t\t<h3><i class=\"fa fa-lock fa-4x\"></i></h3>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"p-t-31 p-b-9\">\r\n\t\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\t\tEnter the code sent to {mobile}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"username\" id=\"username\"/>\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<Link to=\"/reset\">Resend code</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={verify}>\r\n\t\t\t\t\t\t\tAuthenticate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"w-full text-center p-t-55\">\r\n\t\t\t\t\t\t<Link to=\"/signIn\">Back to log in</Link>\r\n\t\t\t\t\t</div>\r\n    </>\r\n  )\r\n};","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\chkAuth.jsx",[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\SendData.jsx",[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmSms.jsx",["191","192"],[],"import React from 'react';\r\nimport { useNavigate, useEffect, Link } from 'react-router-dom';\r\nimport SendData from './SendData';\r\nimport ConfirmEmail from './ConfirmEmail';\r\n\r\nexport default function ConfirmSms (props) {\r\n\t\r\n\t//const Navigate = useNavigate();\r\n\tconst [stage, setStage] = React.useState(\"stage2\");\r\n\tconst [username, setUsername] = React.useState(props.username);\r\n\tconst [password, setPassword] = React.useState(props.password);\r\n\tconst [email, setEmail] = React.useState(props.email);\r\n\tconst [mobile, setMobile] = React.useState(props.mobile);\r\n\tconst [otp_sms, setOtp_sms] = React.useState(\"\");\r\n\r\n\tasync function verify(){\r\n\t\t\r\n\t\tconst otp = document.getElementById('signupmobileotp').value;\r\n\t\t\t\r\n\t\tlet signindata = {data:{\r\n\t\t\tUsername: props.username,\r\n\t\t\tPassword: props.password,\r\n\t\t\tEmail:  props.email,\r\n\t\t\tMobile: props.mobile,\r\n\t\t\tOTP_Mobile: otp,\r\n\t\t\tRequestType: \"stage2\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet gqlRequest = \"mutation SignUp ($data: SecurityCheckInput!){ SignUp(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signindata, 'signup')\r\n\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n\t\t\t//{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n\t\t\tconsole.log(\"Unable to send sms, please try again\", response.errors[0].message )\r\n\t\t\t\r\n\t\t} else { // if password is a match redirect to profile page\r\n\t\t\talert(\"Please confirm your email\")\r\n\t\t\tsetUsername(props.username)\r\n\t\t\tsetPassword(props.password)\r\n\t\t\tsetEmail(props.email)\r\n\t\t\tsetMobile(props.mobile)\r\n\t\t\tsetOtp_sms(otp)\r\n\t\t\tsetStage(\"stage3\")\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\treturn ( \r\n\t\t<>\r\n\t\t{stage === \"stage3\" ?\r\n\r\n      \t\t<ConfirmEmail username={username} password={password} email={email} mobile={mobile} otp_sms={otp_sms} />\r\n\t\t\t:\r\n\t\t\t<>\r\n\t\t\t\t<span className=\"login100-form-title p-b-53\">\r\n\t\t\t\t<h3><i class=\"fa fa-lock fa-4x\"></i></h3>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\r\n\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\tEnter the code sent to {props.mobile}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\r\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"mobileotp\" id=\"signupmobileotp\"/>\r\n\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<Link to=\"/reset\">Resend code</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={verify}>\r\n\t\t\t\t\t\tAuthenticate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-full text-center p-t-55\">\r\n\t\t\t\t\t<Link to=\"/signIn\">Back to log in</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</>\r\n\t\t}\r\n\t\t</> \r\n\t)\r\n};","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmEmail.jsx",["193","194","195","196","197","198","199","200","201","202","203"],[],"import React from 'react';\r\nimport { useNavigate, useEffect, Link } from 'react-router-dom';\r\nimport SendData from './SendData';\r\n\r\nexport default function ConfirmEmail (props) {\r\n\t\r\n\tconst Navigate = useNavigate();\r\n\tconst [stage, setStage] = React.useState(\"stage3\");\r\n\tconst [username, setUsername] = React.useState(props.username);\r\n\tconst [password, setPassword] = React.useState(props.password);\r\n\tconst [email, setEmail] = React.useState(props.email);\r\n\tconst [mobile, setMobile] = React.useState(props.mobile);\r\n\tconst [otp_sms, setOtp_sms] = React.useState(props.otp_sms);\r\n\r\n\tasync function verify(){\r\n\t\t\r\n\t\tconst otp = document.getElementById('signupemailotp').value;\r\n\t\t\t\r\n\t\tlet signindata = {data:{\r\n\t\t\tUsername: props.username,\r\n\t\t\tPassword: props.password,\r\n\t\t\tEmail:  props.email,\r\n\t\t\tMobile: props.mobile,\r\n\t\t\tOTP_Mobile: props.otp_sms,\r\n\t\t\tOTP_Email: otp,\r\n\t\t\tRequestType: stage\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet gqlRequest = \"mutation SignUp ($data: SecurityCheckInput!){ SignUp(input: $data) { Token } }\"\r\n\t\t\r\n\t\tlet response = await SendData(gqlRequest, signindata, 'signup')\r\n\r\n\t\t\r\n\t\tif ( \"errors\" in response ){ // if password is a match redirect to profile page\r\n\t\t\t//{ProcessErrorAlerts(\"hi\", \"hi\")}\r\n\t\t\tconsole.log(\"Unable to send email\", response.errors[0].message )\r\n\t\t\t\r\n\t\t} else {// if password is a match redirect to profile page\r\n\t\t\tlocalStorage.setItem('jwt_token', response.data.SignUp.Token) // Store JWT in storage\r\n      \t\talert(\"Welcome to the club! Please setup your profile\")\r\n\t\t\tNavigate (\"/editProfile/\"+username)\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\treturn ( \r\n\t\t\t<>\r\n\t\t\t\t<span className=\"login100-form-title p-b-53\">\r\n\t\t\t\t<h3><i class=\"fa fa-lock fa-4x\"></i></h3>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"p-t-31 p-b-9\">\r\n\t\t\t\t\t<span className=\"txt1\">\r\n\t\t\t\t\t\tEnter the code sent to {props.email}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"verification code is required\">\r\n\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"emailotp\" id=\"signupemailotp\"/>\r\n\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<Link to=\"/reset\">Resend code</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t\t\t<button className=\"login100-form-btn\" type=\"button\" onClick={verify}>\r\n\t\t\t\t\t\tAuthenticate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"w-full text-center p-t-55\">\r\n\t\t\t\t\t<Link to=\"/signIn\">Back to log in</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</>\r\n\t)\r\n};","C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ConfirmSmsSignIn.jsx",["204","205","206","207","208","209","210","211"],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ProcessErrorAlerts.jsx",[],[],"C:\\Users\\devteam\\source\\repos\\andru100\\Social-Network-Microservice\\frontend-react\\src\\routes\\ResetPassword.jsx",["212"],[],{"ruleId":"213","severity":1,"message":"214","line":18,"column":4,"nodeType":"215","endLine":18,"endColumn":6,"suggestions":"216"},{"ruleId":"213","severity":1,"message":"217","line":31,"column":5,"nodeType":"215","endLine":31,"endColumn":7,"suggestions":"218"},{"ruleId":"213","severity":1,"message":"219","line":33,"column":5,"nodeType":"215","endLine":33,"endColumn":15,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":20,"column":4,"nodeType":"215","endLine":20,"endColumn":6,"suggestions":"225"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":18,"column":4,"nodeType":"215","endLine":18,"endColumn":6,"suggestions":"226"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":18,"column":4,"nodeType":"215","endLine":18,"endColumn":6,"suggestions":"227"},{"ruleId":"221","severity":1,"message":"228","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":14},{"ruleId":"221","severity":1,"message":"229","line":16,"column":16,"nodeType":"223","messageId":"224","endLine":16,"endColumn":24},{"ruleId":"221","severity":1,"message":"230","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":15},{"ruleId":"221","severity":1,"message":"231","line":17,"column":17,"nodeType":"223","messageId":"224","endLine":17,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":26,"column":4,"nodeType":"215","endLine":26,"endColumn":6,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"233","line":3,"column":23,"nodeType":"223","messageId":"224","endLine":3,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"221","severity":1,"message":"234","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":21},{"ruleId":"221","severity":1,"message":"235","line":12,"column":21,"nodeType":"223","messageId":"224","endLine":12,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":20,"column":4,"nodeType":"215","endLine":20,"endColumn":6,"suggestions":"236"},{"ruleId":"221","severity":1,"message":"237","line":25,"column":17,"nodeType":"223","messageId":"224","endLine":25,"endColumn":27},{"ruleId":"238","severity":2,"message":"239","line":28,"column":14,"nodeType":"223","messageId":"240","endLine":28,"endColumn":22},{"ruleId":"238","severity":2,"message":"241","line":40,"column":4,"nodeType":"223","messageId":"240","endLine":40,"endColumn":14},{"ruleId":"242","severity":2,"message":"243","line":54,"column":3,"nodeType":"244","messageId":"245","endLine":54,"endColumn":19},{"ruleId":"238","severity":2,"message":"239","line":54,"column":30,"nodeType":"223","messageId":"240","endLine":54,"endColumn":38},{"ruleId":"238","severity":2,"message":"246","line":54,"column":50,"nodeType":"223","messageId":"240","endLine":54,"endColumn":58},{"ruleId":"238","severity":2,"message":"247","line":61,"column":66,"nodeType":"223","messageId":"240","endLine":61,"endColumn":72},{"ruleId":"221","severity":1,"message":"248","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"249","line":9,"column":9,"nodeType":"223","messageId":"224","endLine":9,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":42,"column":44,"nodeType":"252","messageId":"253","endLine":42,"endColumn":46},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":18,"column":4,"nodeType":"215","endLine":18,"endColumn":6,"suggestions":"254"},{"ruleId":"213","severity":1,"message":"219","line":33,"column":5,"nodeType":"215","endLine":33,"endColumn":15,"suggestions":"255"},{"ruleId":"213","severity":1,"message":"217","line":31,"column":5,"nodeType":"215","endLine":31,"endColumn":7,"suggestions":"256"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":20,"column":4,"nodeType":"215","endLine":20,"endColumn":6,"suggestions":"257"},{"ruleId":"221","severity":1,"message":"258","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":21},{"ruleId":"221","severity":1,"message":"248","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"248","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"259","line":8,"column":16,"nodeType":"223","messageId":"224","endLine":8,"endColumn":24},{"ruleId":"221","severity":1,"message":"260","line":9,"column":19,"nodeType":"223","messageId":"224","endLine":9,"endColumn":30},{"ruleId":"221","severity":1,"message":"261","line":10,"column":9,"nodeType":"223","messageId":"224","endLine":10,"endColumn":17},{"ruleId":"221","severity":1,"message":"262","line":10,"column":19,"nodeType":"223","messageId":"224","endLine":10,"endColumn":30},{"ruleId":"221","severity":1,"message":"228","line":11,"column":9,"nodeType":"223","messageId":"224","endLine":11,"endColumn":14},{"ruleId":"221","severity":1,"message":"229","line":11,"column":16,"nodeType":"223","messageId":"224","endLine":11,"endColumn":24},{"ruleId":"221","severity":1,"message":"230","line":12,"column":9,"nodeType":"223","messageId":"224","endLine":12,"endColumn":15},{"ruleId":"221","severity":1,"message":"231","line":12,"column":17,"nodeType":"223","messageId":"224","endLine":12,"endColumn":26},{"ruleId":"221","severity":1,"message":"263","line":13,"column":9,"nodeType":"223","messageId":"224","endLine":13,"endColumn":16},{"ruleId":"221","severity":1,"message":"264","line":13,"column":18,"nodeType":"223","messageId":"224","endLine":13,"endColumn":28},{"ruleId":"221","severity":1,"message":"248","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"233","line":2,"column":34,"nodeType":"223","messageId":"224","endLine":2,"endColumn":38},{"ruleId":"221","severity":1,"message":"265","line":9,"column":9,"nodeType":"223","messageId":"224","endLine":9,"endColumn":14},{"ruleId":"221","severity":1,"message":"259","line":9,"column":16,"nodeType":"223","messageId":"224","endLine":9,"endColumn":24},{"ruleId":"221","severity":1,"message":"260","line":10,"column":19,"nodeType":"223","messageId":"224","endLine":10,"endColumn":30},{"ruleId":"221","severity":1,"message":"262","line":11,"column":19,"nodeType":"223","messageId":"224","endLine":11,"endColumn":30},{"ruleId":"221","severity":1,"message":"263","line":12,"column":9,"nodeType":"223","messageId":"224","endLine":12,"endColumn":16},{"ruleId":"221","severity":1,"message":"264","line":12,"column":18,"nodeType":"223","messageId":"224","endLine":12,"endColumn":28},{"ruleId":null,"fatal":true,"severity":2,"message":"266","line":24,"column":3},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Navigate'. Either include it or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has missing dependencies: 'Navigate' and 'getCmt'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'getCmt'. Either include it or remove the dependency array.",["269"],"no-unused-vars","'Google' is defined but never used.","Identifier","unusedVar",["270"],["271"],["272"],"'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'mobile' is assigned a value but never used.","'setMobile' is assigned a value but never used.",["273"],"'Link' is defined but never used.","'ResetPassword' is defined but never used.","'setUpdateType' is assigned a value but never used.",["274"],"'RequestOTP' is defined but never used.","no-undef","'username' is not defined.","undef","'alertError' is not defined.","react/jsx-no-undef","'ConfirmSmsSignIn' is not defined.","JSXIdentifier","undefined","'password' is not defined.","'verify' is not defined.","'useEffect' is defined but never used.","'Navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["275"],["276"],["277"],["278"],"'useNavigate' is defined but never used.","'setStage' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'otp_sms' is assigned a value but never used.","'setOtp_sms' is assigned a value but never used.","'stage' is assigned a value but never used.","Parsing error: Unexpected token, expected \",\" (24:3)",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"279","fix":"284"},{"desc":"279","fix":"285"},{"desc":"279","fix":"286"},{"desc":"279","fix":"287"},{"desc":"279","fix":"288"},{"desc":"279","fix":"289"},{"desc":"281","fix":"290"},{"desc":"281","fix":"291"},{"desc":"279","fix":"292"},"Update the dependencies array to be: [Navigate]",{"range":"293","text":"294"},"Update the dependencies array to be: [Navigate, getCmt]",{"range":"295","text":"296"},{"range":"297","text":"296"},{"range":"298","text":"294"},{"range":"299","text":"294"},{"range":"300","text":"294"},{"range":"301","text":"294"},{"range":"302","text":"294"},{"range":"303","text":"294"},{"range":"304","text":"296"},{"range":"305","text":"296"},{"range":"306","text":"294"},[497,499],"[Navigate]",[949,951],"[Navigate, getCmt]",[1116,1126],[530,532],[504,506],[504,506],[877,879],[612,614],[504,506],[1116,1126],[949,951],[530,532]]