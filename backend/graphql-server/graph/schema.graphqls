# GraphQL schema example
#
# https://gqlgen.com/getting-started/


#scalar Upload
scalar Time
scalar Int64
scalar Int32
#scalar Map

type Query {
  Chkauth(input: JwtdataInput!) : Authd
  GetAllComments(input: String!) : MongoFields
  GetUserComments(input: String!) : MongoFields
}

type Mutation {
  SignIn(input: SecurityCheckInput!) : Jwtdata
  SignUp(input: SecurityCheckInput!) : Jwtdata
  LikeComment(input: SendLikeInput!) : MongoFields
  ReplyComment(input: ReplyCommentInput!) : MongoFields
  NewComment(input: SendCmtInput!) : MongoFields
  #PostFile(file: Upload!): MongoFields
  UpdateBio(input: UpdateBioInput!) : MongoFields
  RequestOTP(input: RequestOtpInput!) : Confirmation
  SecureUpdate(input: SecurityCheckInput!) : Jwtdata
  
}

input SecurityCheckInput {
	Username: String! 
	Password: String
	DOB: String 
	Email: String 
	Mobile: String
	OTP_Email: String 
	OTP_Mobile: String 
	Token: String
	RequestType: String! 
	UpdateType: String
	UpdateData: String
}

input RequestOtpInput  {
	Username: String! 
	Mobile: String
	Email: String
	RequestType: String!
	UserType: String!
}

type Confirmation {
	Username: String!
	RequestType: String!
}

input MutationInput {
  name: String!
  ID: String!
}

type Authd  {
	AuthdUser: String!
}

# type AuthCheck  {
# 	AuthdUser: String!
# }

type GetUserCmts  {
	Page:     String! 
	Username: String! 
}

type Claims  {
	Username: String!
	#jwt.StandardClaims
}

type Jwtdata  { 
	Token: String! 	
	MobClue: String
	EmailClue: String
	AuthType: String
}


type MsgCmts  {
	ID : String!
	Username: String! 
	Comment:  String! 
	Profpic:  String!
}

type Likes  {
	Username: String! 
	Profpic:  String!
}

type PostData  {
	ID: 		String!
	Username:    String!     
	MainCmt:     String!    
	TimeStamp:   Int64!     
	Comments:    [MsgCmts!]!  #
	Likes:       [Likes!]!  #
}


#  to hold retrived mongo doc
type MongoFields  {
	# Key:            String!            
	# #ID:             primitive.Object#ID
	Username:       String!             
	Bio:            String!           
	Profpic:        String!   
	Photos:         [String!]!   
	Following:      [String!]!
	Followers:      [String!]!
	Replys:         [String!]!
	Liked:          [String!]!
	Posts:          [PostData!]!       
}


input JwtdataInput  { 
	Token: String! 
}


input SendLikeInput  {
	Username:   String!  
	LikedBy:   String! #  
	LikeByPic:   String! #  
	PostID:   String!,
	ReturnPage: String!,
	RequestType: String!
}

input SendCmtInput  {
	Username:    String!    
	SessionUser: String!    
	MainCmt:     String!  
	TimeStamp:   Int64!    
	ReturnPage: String!     
	RequestType: String!
	PostID: String!
}

input ReplyCommentInput  {
	AuthorUsername:   String! 
	ReplyUsername: String! 
	ReplyComment:  String! 
	ReplyProfpic:  String!
	PostID:   String!   
	ReturnPage: String! 
	RequestType: String!
	ReplyID: String!
}

input UpdateBioInput  {
	Username: String! 
	Bio:  String!
}

# input UploadInput {
# 	#Username: String!
# 	File: Upload!
# 	#Type: String!
# }	

